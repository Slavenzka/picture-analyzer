{"version":3,"sources":["Pages/Auth/Auth.module.scss","components/Button/Button.module.scss","components/Header/Header.module.scss","components/Form/Form.module.scss","components/Input/Input.module.scss","components/Checkbox/Checkbox.module.scss","components/Heading/Heading.module.scss","components/Grid/Container.module.scss","components/ErrorMessage/ErrorMessage.module.scss","Pages/Setup/Setup.module.scss","serviceWorker.js","store/reducers/elasticAdaptive.js","utils/index.js","hoc/ElasticAdaptive.js","store/actions/elasticAdaptive.js","store/actions/actionTypes.js","components/Grid/Container.js","utils/const.js","components/Heading/Heading.js","assets/icons/IconSpinner.js","components/Button/Button.js","components/Header/Header.js","assets/icons/IconCheckbox.js","components/Checkbox/Checkbox.js","components/Form/Form.js","Pages/Setup/Setup.js","Pages/Routes.js","App.js","store/reducers/ui.js","store/reducers/data.js","store/reducers/auth.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","config","baseSize","baseWidth","process","widthLimit","curFontSize","debounce","func","lastTimeout","context","this","args","arguments","clearTimeout","setTimeout","apply","addLeadingZero","number","updateObject","object","fields","Object","assign","withRouter","children","state","useSelector","elastic","dispatchtFontSize","useDispatch","useEffect","changeSize","addEventListener","removeEventListener","width","document","documentElement","clientWidth","body","innerWidth","html","actualWidth","Math","min","currentSize","type","payload","style","fontSize","Container","className","classnames","css","wrapper","HeadingTypes","ButtonTypes","ButtonPalettes","ButtonSizes","Heading","label","TagName","heading","subheading","IconSpinner","viewBox","d","fillOpacity","transform","attributeName","values","calcMode","dur","repeatCount","Button","onClick","palette","buttonType","size","isLoading","isDisabled","button","buttonLight","buttonDark","buttonBordered","buttonLarge","buttonAdd","buttonDisabled","spinner","Header","header","title","clinic","date","timestamp","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","formattedDate","formattedTime","formatDate","getTime","name","IconCheckbox","strokeWidth","fill","fillRule","strokeLinecap","strokeLinejoin","points","Checkbox","id","register","defaultValue","input","checkboxDisabled","ref","defaultChecked","htmlFor","iconCheck","Form","defaultData","handleClickNext","useForm","defaultValues","reset","handleSubmit","onSubmit","data","list","keys","filter","item","map","index","key","check","checked","controls","defaultShotState","metal","wrongBite","frankfurt","headRotations","headIncline","roundBack","chin","sharpness","tongue","expositionErrors","expositionBroken","Setup","useState","formData","setFormData","activeShot","setActiveShot","console","log","count","length","prevState","stateCopy","concat","push","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","SETUP","Routes","exact","path","component","history","isAuthenticated","auth","isUserAuthenticated","modal","isVisible","content","rootReducer","combineReducers","action","ui","status","store","createStore","applyMiddleware","thunk","Content","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.38bf70a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Auth_container__11OP3\",\"wrapper\":\"Auth_wrapper__2HxyD\",\"heading\":\"Auth_heading__2loVM\",\"input\":\"Auth_input__27nEt\",\"button\":\"Auth_button__5OR4v\",\"error\":\"Auth_error__1tNPL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3nxx8\",\"buttonLight\":\"Button_buttonLight__2uSbz\",\"buttonDark\":\"Button_buttonDark__Gjr1R\",\"buttonBordered\":\"Button_buttonBordered__fj2rH\",\"spinner\":\"Button_spinner__2AOZZ\",\"buttonLarge\":\"Button_buttonLarge__1XMgE\",\"buttonAdd\":\"Button_buttonAdd__1WYKE\",\"buttonDisabled\":\"Button_buttonDisabled__3gSkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__12xjA\",\"wrapper\":\"Header_wrapper__3Q00X\",\"title\":\"Header_title__12j-E\",\"type\":\"Header_type__2l7JN\",\"clinic\":\"Header_clinic__3c9h6\",\"date\":\"Header_date__8b83Y\",\"name\":\"Header_name__PM7QO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Form_wrapper__1AmGU\",\"list\":\"Form_list__1WiVP\",\"check\":\"Form_check__omd4V\",\"button\":\"Form_button__RHA3Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__36TkE\",\"inputError\":\"Input_inputError__1U5Wr\",\"inputResult\":\"Input_inputResult__1t6ul\",\"inputTextarea\":\"Input_inputTextarea__3r3ky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Checkbox_input__26CFu\",\"iconCheck\":\"Checkbox_iconCheck__vWjtH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__2zOZ6\",\"subheading\":\"Heading_subheading__1Z7rp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Container_wrapper__3hiM8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ErrorMessage_label__3Sm7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"count\":\"Setup_count__1jaUR\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  SET_CURRENT_FONT_SIZE,\r\n} from 'store/actions/actionTypes'\r\n\r\nconst initialState = {\r\n  config: {\r\n    baseSize: 10,\r\n    baseWidth: process.env.REACT_APP_BASE_WIDTH_DESKTOP,\r\n    widthLimit: process.env.REACT_APP_WIDTH_LIMIT_DESKTOP\r\n  },\r\n  curFontSize: 10\r\n}\r\n\r\nexport default function ElasticAdaptive (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_FONT_SIZE:\r\n      return {\r\n        ...state,\r\n        curFontSize: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport const debounce = func => {\r\n  let lastTimeout = null\r\n\r\n  return function () {\r\n    const context = this\r\n    const args = arguments\r\n\r\n    if (lastTimeout) {\r\n      clearTimeout(lastTimeout)\r\n    }\r\n\r\n    lastTimeout = setTimeout(function () {\r\n      func.apply(context, args)\r\n    }, 250)\r\n  }\r\n}\r\n\r\nexport const getRandomArrayElement = array => {\r\n  return array[Math.floor(Math.random() * array.length)]\r\n}\r\n\r\nexport const getRandomNumberInRange = (min, max) => min + Math.floor(Math.random() * (max - min + 1))\r\n\r\nexport const getRandomBoolean = () => Math.random() > 0.5;\r\n\r\nexport const shuffleArray = array => array.sort(() => Math.random() > 0.5)\r\n\r\nexport const addLeadingZero = number => number < 10 ? `0${number}` : `${number}`\r\n\r\nexport const getRandomDate = () => {\r\n  const actualYear = (new Date()).getFullYear()\r\n  const yearDiff = actualYear - 1970\r\n\r\n  return new Date(1000 * 60 * 60 * 24 * getRandomNumberInRange(1, 365) * getRandomNumberInRange(1, yearDiff))\r\n}\r\n\r\nexport const formatDate = timestamp => {\r\n  const date = new Date(timestamp)\r\n\r\n  const day = addLeadingZero(date.getDate())\r\n  const month = addLeadingZero(date.getMonth() + 1)\r\n  const year = date.getFullYear()\r\n\r\n  const hours = addLeadingZero(date.getHours())\r\n  const minutes = addLeadingZero(date.getMinutes())\r\n\r\n  return {\r\n    formattedDate: `${day}.${month}.${year}`,\r\n    formattedTime: `${hours}:${minutes}`\r\n  }\r\n}\r\n\r\n/**\r\n * Get a word declination according to counter value\r\n * @param {number} counter - a number, which requires a correct declination\r\n * @param {[string]} wordOptions - an array of possible word declinations\r\n * @returns {string} wordOptions[].calculatedIndex - the correct word from wordOptions array\r\n */\r\nexport const getWordDeclination = (counter, wordOptions = ['ордер', 'ордера', 'ордеров']) => {\r\n  let result = ''\r\n  const counterString = String(counter).split('')\r\n  const lastDigit = counterString[counterString.length - 1]\r\n\r\n  switch (lastDigit) {\r\n    case '1':\r\n      result = wordOptions[0]\r\n      break\r\n    case '2':\r\n    case '3':\r\n    case '4':\r\n      result = wordOptions[1]\r\n      break\r\n    default:\r\n      result = wordOptions[2]\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport const updateObject = (object, ...fields) => {\r\n  return Object.assign({}, object, ...fields);\r\n}\r\n\r\nexport const addFieldToAllObjects = (arrayOfObjects, requiredField) => {\r\n  return arrayOfObjects.map(object => updateObject(object, requiredField))\r\n}\r\n\r\nexport const checkIfObjectEmpty = obj => {\r\n  let isEmpty = true\r\n\r\n  for (let prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      isEmpty = false\r\n      break\r\n    }\r\n  }\r\n\r\n  return isEmpty\r\n}\r\n\r\nexport const renderRow = row => Object.values(row).map((item, key) => (\r\n  <td key={`Fin Tool cell ${item}-${key}`} dangerouslySetInnerHTML={{ __html: item }} />\r\n))\r\n","import { useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { setFontSize } from 'store/actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { debounce } from 'utils'\r\n\r\n// hoc for html font size adjustment in correspondence with user's screen width\r\nconst ElasticAdaptive = ({ children }) => {\r\n  const state = useSelector(state => state.elastic.config)\r\n  const dispatchtFontSize = useDispatch()\r\n\r\n  useEffect(() => {\r\n    changeSize()\r\n    window.addEventListener('resize', debounce(changeSize))\r\n    window.addEventListener('orientationchange', debounce(changeSize))\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', debounce(changeSize))\r\n      window.removeEventListener('orientationchange', debounce(changeSize))\r\n    }\r\n  })\r\n\r\n  const changeSize = () => {\r\n    let width = document.documentElement.clientWidth || document.body.clientWidth || window.innerWidth\r\n    const html = document.documentElement\r\n    const {widthLimit, baseWidth} = state\r\n    let {baseSize} = state\r\n    let actualWidth = width\r\n\r\n    if (widthLimit) {\r\n      actualWidth = Math.min(width, widthLimit)\r\n    }\r\n\r\n    const currentSize = actualWidth / baseWidth * baseSize\r\n    dispatchtFontSize(setFontSize(currentSize))\r\n    html.style.fontSize = currentSize + 'px'\r\n  }\r\n\r\n  return children\r\n}\r\n\r\nexport default withRouter(ElasticAdaptive)\r\n","import {\r\n  SET_CURRENT_FONT_SIZE,\r\n} from 'store/actions/actionTypes'\r\n\r\nexport const setFontSize = data => {\r\n  return {\r\n    type: SET_CURRENT_FONT_SIZE,\r\n    payload: data\r\n  }\r\n}\r\n","export const SET_CURRENT_FONT_SIZE = 'SET_CURRENT_FONT_SIZE'\r\n\r\n// ui\r\nexport const TOGGLE_MODAL_VISIBILITY_STATUS = 'TOGGLE_MODAL_VISIBILITY_STATUS'\r\n\r\n// auth\r\nexport const SET_USER_TO_AUTHENTICATED = 'SET_USER_TO_AUTHENTICATED'\r\n\r\n// data\r\n","import React from 'react'\r\nimport css from './Container.module.scss'\r\nimport classnames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Container = ({\r\n  children,\r\n  className,\r\n}) => (\r\n  <div className={classnames(css.wrapper, className)}>\r\n    { children }\r\n  </div>\r\n)\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  className: PropTypes.string,\r\n}\r\n\r\nexport default Container\r\n","export const ContainerTypes = {\r\n  INNER: 'inner',\r\n  OUTER: 'outer'\r\n}\r\n\r\nexport const DefaultBacklink = {\r\n  LABEL: 'На главную',\r\n}\r\n\r\nexport const HeadingTypes = {\r\n  HEADING: 'heading',\r\n  SUBHEADING: 'subheading'\r\n}\r\n\r\nexport const DEFAULT_SUBHEADING = 'Введите необходимые данные'\r\n\r\nexport const ActionButtonTypes = {\r\n  LOG: 'log',\r\n}\r\n\r\nexport const InputStyles = {\r\n  RESULT: 'result'\r\n}\r\n\r\nexport const ButtonLabels = {\r\n  SUBMIT: 'Посчитать',\r\n  RESET: 'Сбросить'\r\n}\r\n\r\nexport const ButtonTypes = {\r\n  BUTTON: 'button',\r\n  SUBMIT: 'submit',\r\n  ADD: 'add'\r\n}\r\n\r\nexport const ButtonPalettes = {\r\n  DARK: 'dark',\r\n  LIGHT: 'light',\r\n  BORDERED: 'bordered'\r\n}\r\n\r\nexport const ButtonSizes = {\r\n  STANDARD: 'standard',\r\n  LARGE: 'large'\r\n}\r\n\r\nexport const FinTools = [\r\n  {\r\n    full: 'ETF_SPY',\r\n    short: 'spy',\r\n    description: 'SPDR S&P 500 ETF Trust',\r\n  },\r\n  {\r\n    full: 'ETF_QQQ',\r\n    short: 'qqq',\r\n    description: 'PowerShares QQQ Trust, Series 1',\r\n  },\r\n  {\r\n    full: 'ETF_TLT',\r\n    short: 'tlt',\r\n    description: 'iShares 20+ Year Treasury Bond ETF',\r\n  },\r\n  {\r\n    full: 'REIT_EQR',\r\n    short: 'eqr',\r\n    description: 'Equity Residential',\r\n  },\r\n  {\r\n    full: 'ETF_VNQ',\r\n    short: 'vnq',\r\n    description: 'VANGUARD IX FUN/RL EST IX FD ETF',\r\n  },\r\n]\r\n\r\nexport const SPECIAL_SYMBOLS = [\r\n  '(',\r\n  ')',\r\n  '{',\r\n  '}',\r\n  '+',\r\n  '-',\r\n  '/',\r\n  '*',\r\n  '=',\r\n  '>',\r\n  '<',\r\n  '>=',\r\n  '<=',\r\n  ';'\r\n]\r\n","import React from 'react'\r\nimport css from './Heading.module.scss'\r\nimport classnames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport { HeadingTypes } from 'utils/const'\r\n\r\nconst Heading = ({\r\n  className,\r\n  label,\r\n  type = HeadingTypes.HEADING\r\n}) => {\r\n  const TagName = type === HeadingTypes.HEADING\r\n    ? 'h2'\r\n    : 'h3'\r\n\r\n  return (\r\n    <TagName\r\n      className={classnames(className, {\r\n        [css.heading]: type === HeadingTypes.HEADING,\r\n        [css.subheading]: type === HeadingTypes.SUBHEADING,\r\n      })}\r\n    >\r\n      { label }\r\n    </TagName>\r\n  )\r\n}\r\n\r\nHeading.propTypes = {\r\n  className: PropTypes.string,\r\n  label: PropTypes.string,\r\n  type: PropTypes.oneOf([ ...Object.values(HeadingTypes) ])\r\n}\r\n\r\nexport default Heading\r\n","import React from 'react'\r\n\r\nconst IconSpinner = ({ className }) => (\r\n  <svg className={className} viewBox=\"0 0 128 128\">\r\n    <g>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='1'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.2' transform='rotate(30 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.2' transform='rotate(60 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.2' transform='rotate(90 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.2' transform='rotate(120 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.3' transform='rotate(150 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.4' transform='rotate(180 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.5' transform='rotate(210 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.6' transform='rotate(240 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.7' transform='rotate(270 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.8' transform='rotate(300 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.9' transform='rotate(330 64 64)'/>\r\n      <animateTransform attributeName='transform' type='rotate' values='0 64 64;30 64 64;60 64 64;90 64 64;120 64 64;150 64 64;180 64 64;210 64 64;240 64 64;270 64 64;300 64 64;330 64 64' calcMode='discrete' dur='1080ms' repeatCount='indefinite' />\r\n    </g>\r\n</svg>\r\n)\r\n\r\nexport default IconSpinner\r\n","import React from 'react'\r\nimport css from './Button.module.scss'\r\nimport classnames from 'classnames'\r\nimport { ButtonPalettes, ButtonSizes, ButtonTypes } from 'utils/const'\r\nimport PropTypes from 'prop-types'\r\nimport IconSpinner from 'assets/icons/IconSpinner'\r\n\r\nconst Button = ({\r\n  className,\r\n  label,\r\n  onClick,\r\n  palette = ButtonPalettes.LIGHT,\r\n  buttonType = ButtonTypes.BUTTON,\r\n  size = ButtonSizes.STANDARD,\r\n  isLoading,\r\n  isDisabled\r\n}) => {\r\n  return (\r\n    <button\r\n      className={classnames(css.button, className, {\r\n        [css.buttonLight]: palette === ButtonPalettes.LIGHT,\r\n        [css.buttonDark]: palette === ButtonPalettes.DARK,\r\n        [css.buttonBordered]: palette === ButtonPalettes.BORDERED,\r\n        [css.buttonLarge]: size === ButtonSizes.LARGE,\r\n        [css.buttonAdd]: buttonType === ButtonTypes.ADD,\r\n        [css.buttonDisabled]: isLoading || isDisabled\r\n      })}\r\n      onClick={onClick}\r\n      type={buttonType}\r\n    >\r\n      {isLoading && <IconSpinner className={css.spinner} />}\r\n      { label }\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  palette: PropTypes.oneOf([ ...Object.values(ButtonPalettes) ]),\r\n  type: PropTypes.oneOf([ ...Object.values(ButtonTypes) ]),\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport css from './Header.module.scss'\r\nimport classnames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport { formatDate } from 'utils'\r\n\r\nconst Header = ({ className }) => {\r\n  return (\r\n    <header className={css.header}>\r\n      <div className={classnames(css.wrapper, className)}>\r\n        <h1 className={css.title}>\r\n          Рентген аудит\r\n          <span>Сервис оценки качества снимков</span>\r\n        </h1>\r\n        <p className={css.type}>\r\n          Тип анализа - <span>ОТПГ</span>\r\n        </p>\r\n        <div className={css.clinic}>\r\n          Название клиники\r\n        </div>\r\n        <p className={css.date}>\r\n          { formatDate(new Date().getTime()).formattedDate }\r\n        </p>\r\n      </div>\r\n      <p className={css.name}>\r\n        ФИО проверяющего\r\n      </p>\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst IconCheckbox = ({ className }) => (\r\n  <svg className={className} viewBox='0 0 12 9' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\r\n    <g transform='translate(-386.000000, -382.000000)'>\r\n      <g transform='translate(381.000000, 376.000000)'>\r\n        <polyline points='6 11.0478516 9.4397352 14 15.7519531 7' />\r\n      </g>\r\n    </g>\r\n  </svg>\r\n)\r\n\r\nexport default IconCheckbox\r\n","import React from 'react'\r\nimport css from './Checkbox.module.scss'\r\nimport classnames from 'classnames'\r\nimport IconCheckbox from 'assets/icons/IconCheckbox'\r\n\r\nconst Checkbox = ({\r\n  id,\r\n  className,\r\n  register,\r\n  name,\r\n  defaultValue,\r\n  isDisabled,\r\n  label,\r\n}) => {\r\n  return (\r\n    <>\r\n      <input\r\n        className={classnames(css.input, {\r\n          [css.checkboxDisabled]: isDisabled\r\n        })}\r\n        type='checkbox'\r\n        id={id}\r\n        name={name}\r\n        ref={register}\r\n        defaultChecked={defaultValue}\r\n      />\r\n      <label\r\n        className={className}\r\n        htmlFor={id}\r\n      >\r\n        <span>\r\n          { label }\r\n        </span>\r\n        <IconCheckbox className={css.iconCheck} />\r\n      </label>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Checkbox\r\n","import React from 'react'\r\nimport css from './Form.module.scss'\r\nimport { useForm } from 'react-hook-form'\r\nimport Checkbox from 'components/Checkbox/Checkbox'\r\nimport { HeadingTypes } from 'utils/const'\r\nimport Heading from 'components/Heading/Heading'\r\nimport Button from 'components/Button/Button'\r\n\r\nconst Form = ({ defaultData, handleClickNext }) => {\r\n  const { register, reset, handleSubmit } = useForm({\r\n      defaultValues: defaultData\r\n  })\r\n\r\n  const submitResults = data => {\r\n    reset(defaultData)\r\n    handleClickNext(data)\r\n  }\r\n\r\n  const renderCheckboxes = () => Object.keys(defaultData).filter(item => item !== 'id').map((type, index) => (\r\n    <li className={css.item} key={index}>\r\n      <Checkbox\r\n        register={register}\r\n        className={css.check}\r\n        id={`${type}`}\r\n        name={`${type}.checked`}\r\n        defaultValue={defaultData[type].checked}\r\n        label={defaultData[type].label}\r\n      />\r\n    </li>\r\n  ))\r\n\r\n  return (\r\n    <div className={css.wrapper}>\r\n      <Heading\r\n        type={HeadingTypes.SUBHEADING}\r\n        label='Критерии анализа:'\r\n      />\r\n      <form onSubmit={handleSubmit(submitResults)}>\r\n        <ol className={css.list}>\r\n          { renderCheckboxes() }\r\n        </ol>\r\n        <div className={css.controls}>\r\n          <Button\r\n            className={css.button}\r\n            label='Следующий снимок'\r\n            buttonType='submit'\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React, { useState } from 'react'\r\nimport css from './Setup.module.scss'\r\nimport Container from 'components/Grid/Container'\r\nimport Header from 'components/Header/Header'\r\nimport Form from 'components/Form/Form'\r\nimport * as FileSaver from 'file-saver'\r\nimport * as XLSX from 'xlsx'\r\n\r\nconst defaultShotState = {\r\n  metal: {\r\n    checked: false,\r\n    label: 'Металлические предметы'\r\n  },\r\n  wrongBite: {\r\n    checked: false,\r\n    label: 'Неверно прикушен блок'\r\n  },\r\n  frankfurt: {\r\n    checked: false,\r\n    label: 'Линия Франкфурта'\r\n  },\r\n  headRotations: {\r\n    checked: false,\r\n    label: 'Поворот головы'\r\n  },\r\n  headIncline: {\r\n    checked: false,\r\n    label: 'Наклон головы'\r\n  },\r\n  roundBack: {\r\n    checked: false,\r\n    label: 'Сутулость при съемке'\r\n  },\r\n  chin: {\r\n    checked: false,\r\n    label: 'Подбородок не на опоре'\r\n  },\r\n  sharpness: {\r\n    checked: false,\r\n    label: 'Динамическая нерезкость'\r\n  },\r\n  tongue: {\r\n    checked: false,\r\n    label: 'Язык не прижат'\r\n  },\r\n  expositionErrors: {\r\n    checked: false,\r\n    label: 'Ошибки экспозиции'\r\n  },\r\n  expositionBroken: {\r\n    checked: false,\r\n    label: 'Незавершенная экспозиция'\r\n  },\r\n}\r\n\r\nconst Setup = () => {\r\n  const [formData, setFormData] = useState([defaultShotState])\r\n  const [activeShot, setActiveShot] = useState(0)\r\n\r\n  const handleClickNext = data => {\r\n    setFormData(prevState => {\r\n      const stateCopy = [].concat(prevState)\r\n      stateCopy[activeShot] = data\r\n      stateCopy.push(defaultShotState)\r\n      return stateCopy\r\n    })\r\n    setActiveShot(prevState => prevState + 1)\r\n  }\r\n\r\n  console.log(formData)\r\n\r\n  const handleClickReport = () => {\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n\r\n    const ws = XLSX.utils.json_to_sheet(formData);\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const data = new Blob([excelBuffer], {type: fileType});\r\n    FileSaver.saveAs(data, 'test' + fileExtension);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Header />\r\n      <span className={css.count}>\r\n        { `Всего снимков просмотрено: ${formData.length - 1}` }\r\n      </span>\r\n      <Form\r\n        defaultData={formData[activeShot]}\r\n        handleClickNext={handleClickNext}\r\n      />\r\n      <button\r\n        type='button'\r\n        onClick={handleClickReport}\r\n      >\r\n        Отчет\r\n      </button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Setup\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Auth from 'Pages/Auth/Auth'\r\nimport Setup from 'Pages/Setup/Setup'\r\n\r\nexport const SETUP = '/setup'\r\nexport const AUTH = '/auth'\r\n\r\n// TODO apply async import of page components to split the initial chunk\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      {/*<Route exact path={AUTH} component={Auth} />*/}\r\n      <Route exact path={SETUP} component={Setup} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React, { useEffect } from 'react'\r\nimport ElasticAdaptive from 'hoc/ElasticAdaptive'\r\nimport Routes, { AUTH } from 'Pages/Routes'\r\nimport { useSelector } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nconst App = ({ history }) => {\r\n  const isAuthenticated = useSelector(state => state.auth.isUserAuthenticated)\r\n\r\n  useEffect(() => {\r\n    // if (!isAuthenticated) {\r\n    //   history.push({\r\n    //     pathname: AUTH\r\n    //   })\r\n    // }\r\n  }, [isAuthenticated, history])\r\n\r\n  return (\r\n    <ElasticAdaptive>\r\n      <Routes />\r\n    </ElasticAdaptive>\r\n  )\r\n}\r\n\r\nexport default withRouter(App)\r\n","import {\r\n  TOGGLE_MODAL_VISIBILITY_STATUS\r\n} from 'store/actions/actionTypes'\r\nimport { updateObject } from 'utils'\r\n\r\nconst initialState = {\r\n  modal: {\r\n    isVisible: false,\r\n    content: null\r\n  }\r\n}\r\n\r\nexport default function ui (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TOGGLE_MODAL_VISIBILITY_STATUS: return updateObject(state, { modal: {\r\n        isVisible: action.payload.status,\r\n        content: action.payload.content\r\n      }})\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n}\r\n\r\nexport default function data (state = initialState, action) {\r\n  switch (action.type) {\r\n    default: return state\r\n  }\r\n}\r\n","import {\r\n  SET_USER_TO_AUTHENTICATED\r\n} from 'store/actions/actionTypes'\r\nimport { updateObject } from 'utils'\r\n\r\nconst initialState = {\r\n  isUserAuthenticated: false\r\n}\r\n\r\nexport default function auth (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_USER_TO_AUTHENTICATED: return updateObject(state, { isUserAuthenticated: true })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'normalize.css'\r\nimport 'styles/common.scss'\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport elasticAdaptive from 'store/reducers/elasticAdaptive'\r\nimport App from 'App'\r\nimport thunk from 'redux-thunk'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport ui from 'store/reducers/ui'\r\nimport data from 'store/reducers/data'\r\nimport auth from 'store/reducers/auth'\r\n\r\nconst rootReducer = combineReducers({\r\n  elastic: elasticAdaptive,\r\n  ui: ui,\r\n  data: data,\r\n  auth: auth,\r\n})\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(thunk))\r\n\r\nconst Content = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(Content, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}