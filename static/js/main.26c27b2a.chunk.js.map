{"version":3,"sources":["components/Form/Form.module.scss","components/Button/Button.module.scss","components/ModalSetup/ModalSetup.module.scss","Pages/Auth/Auth.module.scss","Pages/Setup/Setup.module.scss","components/Header/Header.module.scss","components/Input/Input.module.scss","components/Checkbox/Checkbox.module.scss","components/Heading/Heading.module.scss","components/Modal/Modal.module.scss","components/Grid/Container.module.scss","components/ErrorMessage/ErrorMessage.module.scss","serviceWorker.js","store/reducers/elasticAdaptive.js","store/actions/ui.js","store/actions/actionTypes.js","utils/index.js","hoc/ElasticAdaptive.js","store/actions/elasticAdaptive.js","components/Grid/Container.js","components/Header/Header.js","assets/icons/IconCheckbox.js","components/Checkbox/Checkbox.js","utils/const.js","components/Heading/Heading.js","assets/icons/IconSpinner.js","components/Button/Button.js","components/Input/Input.js","components/Form/Form.js","assets/icons/IconClose.js","components/ModalSetup/ModalSetup.js","store/actions/data.js","components/Modal/Modal.js","assets/icons/IconGear.js","Pages/Setup/Setup.js","hoc/withModal.js","Pages/Routes.js","App.js","store/reducers/ui.js","store/reducers/data.js","store/reducers/auth.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","config","baseSize","baseWidth","process","widthLimit","curFontSize","toggleModalVisibility","contentComponent","newStatus","dispatch","getState","type","payload","content","status","isModalVisible","debounce","func","lastTimeout","context","this","args","arguments","clearTimeout","setTimeout","apply","addLeadingZero","number","formatDate","timestamp","date","Date","day","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","formattedDate","formattedTime","updateObject","object","fields","Object","assign","withRouter","children","state","useSelector","elastic","dispatchtFontSize","useDispatch","useEffect","changeSize","addEventListener","removeEventListener","width","document","documentElement","clientWidth","body","innerWidth","html","actualWidth","Math","min","currentSize","style","fontSize","Container","className","classnames","css","wrapper","Header","setup","data","clinic","header","title","getTime","IconCheckbox","viewBox","strokeWidth","fill","fillRule","strokeLinecap","strokeLinejoin","transform","points","Checkbox","id","register","name","defaultValue","isDisabled","label","input","checkboxDisabled","ref","defaultChecked","htmlFor","iconCheck","HeadingTypes","InputStyles","ButtonTypes","ButtonPalettes","ButtonSizes","Heading","TagName","heading","subheading","IconSpinner","d","fillOpacity","attributeName","values","calcMode","dur","repeatCount","Button","onClick","palette","buttonType","size","isLoading","button","buttonLight","buttonDark","buttonBordered","buttonLarge","buttonAdd","buttonDisabled","spinner","Input","isError","placeholder","registerInForm","props","inputResult","inputTextarea","inputError","disabled","Form","defaultData","handleClickNext","handleClickReport","isReportDisabled","useForm","defaultValues","reset","handleSubmit","onSubmit","formWrapper","list","keys","filter","item","map","index","key","check","checked","comment","controls","report","IconClose","ModalSetup","reviewer","buttonClose","icon","buttonSubmit","Modal","contentRef","useRef","modal","ui","isVisible","handleEscPress","evt","keyCode","disableBodyScroll","current","reserveScrollBarGap","clearAllBodyScrollLocks","modalOpened","node","IconGear","defaultShotState","metal","wrongBite","frankfurt","headRotations","headIncline","roundBack","chin","sharpness","tongue","expositionErrors","expositionBroken","ray","dickey","tongueBone","withModal","WrappedComponent","pathname","useState","formData","setFormData","activeShot","setActiveShot","container","count","length","buttonSetup","callback","prevState","stateCopy","concat","push","slice","console","log","finalData","obj","forEach","getDefaultResult","comments","correctShots","correct","dataToBeSent","entries","toFixed","xlxData","ws","XLSX","aoa_to_sheet","skipHeader","wpx","wb","Sheets","SheetNames","excelBuffer","bookType","fileData","Blob","FileSaver","Routes","path","component","Setup","history","isUserAuthenticated","rootReducer","combineReducers","action","auth","store","createStore","applyMiddleware","thunk","Content","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.26c27b2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Form_wrapper__1AmGU\",\"report\":\"Form_report__3Ot_8\",\"comment\":\"Form_comment__2KI4w\",\"formWrapper\":\"Form_formWrapper__19aKV\",\"list\":\"Form_list__1WiVP\",\"check\":\"Form_check__omd4V\",\"controls\":\"Form_controls__1FWR-\",\"button\":\"Form_button__RHA3Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3nxx8\",\"buttonLight\":\"Button_buttonLight__2uSbz\",\"buttonDark\":\"Button_buttonDark__Gjr1R\",\"buttonBordered\":\"Button_buttonBordered__fj2rH\",\"spinner\":\"Button_spinner__2AOZZ\",\"buttonLarge\":\"Button_buttonLarge__1XMgE\",\"buttonAdd\":\"Button_buttonAdd__1WYKE\",\"buttonDisabled\":\"Button_buttonDisabled__3gSkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ModalSetup_wrapper__-Lhsc\",\"buttonClose\":\"ModalSetup_buttonClose__1mLhn\",\"icon\":\"ModalSetup_icon__1zyre\",\"formWrapper\":\"ModalSetup_formWrapper__iW0xt\",\"input\":\"ModalSetup_input__Yo7SB\",\"buttonSubmit\":\"ModalSetup_buttonSubmit__1uMPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Auth_container__11OP3\",\"wrapper\":\"Auth_wrapper__2HxyD\",\"heading\":\"Auth_heading__2loVM\",\"input\":\"Auth_input__27nEt\",\"button\":\"Auth_button__5OR4v\",\"error\":\"Auth_error__1tNPL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Setup_container__3sz9-\",\"wrapper\":\"Setup_wrapper__1yPVA\",\"buttonSetup\":\"Setup_buttonSetup__2N6FI\",\"icon\":\"Setup_icon__2wgBY\",\"count\":\"Setup_count__1jaUR\",\"name\":\"Setup_name__3CSWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__12xjA\",\"wrapper\":\"Header_wrapper__3Q00X\",\"title\":\"Header_title__12j-E\",\"type\":\"Header_type__2l7JN\",\"clinic\":\"Header_clinic__3c9h6\",\"date\":\"Header_date__8b83Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__36TkE\",\"inputError\":\"Input_inputError__1U5Wr\",\"inputResult\":\"Input_inputResult__1t6ul\",\"inputTextarea\":\"Input_inputTextarea__3r3ky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Checkbox_input__26CFu\",\"iconCheck\":\"Checkbox_iconCheck__vWjtH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__2zOZ6\",\"subheading\":\"Heading_subheading__1Z7rp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__3sPSj\",\"modalOpened\":\"Modal_modalOpened__E_Rd5\",\"showModal\":\"Modal_showModal__rKsNx\",\"hideModal\":\"Modal_hideModal__2r5v9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Container_wrapper__3hiM8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ErrorMessage_label__3Sm7U\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  SET_CURRENT_FONT_SIZE,\r\n} from 'store/actions/actionTypes'\r\n\r\nconst initialState = {\r\n  config: {\r\n    baseSize: 10,\r\n    baseWidth: process.env.REACT_APP_BASE_WIDTH_DESKTOP,\r\n    widthLimit: process.env.REACT_APP_WIDTH_LIMIT_DESKTOP\r\n  },\r\n  curFontSize: 10\r\n}\r\n\r\nexport default function ElasticAdaptive (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_FONT_SIZE:\r\n      return {\r\n        ...state,\r\n        curFontSize: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { TOGGLE_MODAL_VISIBILITY_STATUS } from 'store/actions/actionTypes'\r\n\r\nexport const toggleModalVisibility = (contentComponent, newStatus) => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: TOGGLE_MODAL_VISIBILITY_STATUS,\r\n      payload: {\r\n        content: contentComponent,\r\n        status: typeof newStatus === 'boolean' ? newStatus : !getState.isModalVisible,\r\n      }\r\n    })\r\n  }\r\n}\r\n","export const SET_CURRENT_FONT_SIZE = 'SET_CURRENT_FONT_SIZE'\r\n\r\n// ui\r\nexport const TOGGLE_MODAL_VISIBILITY_STATUS = 'TOGGLE_MODAL_VISIBILITY_STATUS'\r\n\r\n// auth\r\nexport const SET_USER_TO_AUTHENTICATED = 'SET_USER_TO_AUTHENTICATED'\r\n\r\n// data\r\nexport const SAVE_SETUP = 'SAVE_SETUP'\r\n","import React from 'react'\r\n\r\nexport const debounce = func => {\r\n  let lastTimeout = null\r\n\r\n  return function () {\r\n    const context = this\r\n    const args = arguments\r\n\r\n    if (lastTimeout) {\r\n      clearTimeout(lastTimeout)\r\n    }\r\n\r\n    lastTimeout = setTimeout(function () {\r\n      func.apply(context, args)\r\n    }, 250)\r\n  }\r\n}\r\n\r\nexport const getRandomArrayElement = array => {\r\n  return array[Math.floor(Math.random() * array.length)]\r\n}\r\n\r\nexport const getRandomNumberInRange = (min, max) => min + Math.floor(Math.random() * (max - min + 1))\r\n\r\nexport const getRandomBoolean = () => Math.random() > 0.5;\r\n\r\nexport const shuffleArray = array => array.sort(() => Math.random() > 0.5)\r\n\r\nexport const addLeadingZero = number => number < 10 ? `0${number}` : `${number}`\r\n\r\nexport const getRandomDate = () => {\r\n  const actualYear = (new Date()).getFullYear()\r\n  const yearDiff = actualYear - 1970\r\n\r\n  return new Date(1000 * 60 * 60 * 24 * getRandomNumberInRange(1, 365) * getRandomNumberInRange(1, yearDiff))\r\n}\r\n\r\nexport const formatDate = timestamp => {\r\n  const date = new Date(timestamp)\r\n\r\n  const day = addLeadingZero(date.getDate())\r\n  const month = addLeadingZero(date.getMonth() + 1)\r\n  const year = date.getFullYear()\r\n\r\n  const hours = addLeadingZero(date.getHours())\r\n  const minutes = addLeadingZero(date.getMinutes())\r\n\r\n  return {\r\n    formattedDate: `${day}.${month}.${year}`,\r\n    formattedTime: `${hours}:${minutes}`\r\n  }\r\n}\r\n\r\n/**\r\n * Get a word declination according to counter value\r\n * @param {number} counter - a number, which requires a correct declination\r\n * @param {[string]} wordOptions - an array of possible word declinations\r\n * @returns {string} wordOptions[].calculatedIndex - the correct word from wordOptions array\r\n */\r\nexport const getWordDeclination = (counter, wordOptions = ['ордер', 'ордера', 'ордеров']) => {\r\n  let result = ''\r\n  const counterString = String(counter).split('')\r\n  const lastDigit = counterString[counterString.length - 1]\r\n\r\n  switch (lastDigit) {\r\n    case '1':\r\n      result = wordOptions[0]\r\n      break\r\n    case '2':\r\n    case '3':\r\n    case '4':\r\n      result = wordOptions[1]\r\n      break\r\n    default:\r\n      result = wordOptions[2]\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport const updateObject = (object, ...fields) => {\r\n  return Object.assign({}, object, ...fields);\r\n}\r\n\r\nexport const addFieldToAllObjects = (arrayOfObjects, requiredField) => {\r\n  return arrayOfObjects.map(object => updateObject(object, requiredField))\r\n}\r\n\r\nexport const checkIfObjectEmpty = obj => {\r\n  let isEmpty = true\r\n\r\n  for (let prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      isEmpty = false\r\n      break\r\n    }\r\n  }\r\n\r\n  return isEmpty\r\n}\r\n\r\nexport const renderRow = row => Object.values(row).map((item, key) => (\r\n  <td key={`Fin Tool cell ${item}-${key}`} dangerouslySetInnerHTML={{ __html: item }} />\r\n))\r\n","import { useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { setFontSize } from 'store/actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { debounce } from 'utils'\r\n\r\n// hoc for html font size adjustment in correspondence with user's screen width\r\nconst ElasticAdaptive = ({ children }) => {\r\n  const state = useSelector(state => state.elastic.config)\r\n  const dispatchtFontSize = useDispatch()\r\n\r\n  useEffect(() => {\r\n    changeSize()\r\n    window.addEventListener('resize', debounce(changeSize))\r\n    window.addEventListener('orientationchange', debounce(changeSize))\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', debounce(changeSize))\r\n      window.removeEventListener('orientationchange', debounce(changeSize))\r\n    }\r\n  })\r\n\r\n  const changeSize = () => {\r\n    let width = document.documentElement.clientWidth || document.body.clientWidth || window.innerWidth\r\n    const html = document.documentElement\r\n    const {widthLimit, baseWidth} = state\r\n    let {baseSize} = state\r\n    let actualWidth = width\r\n\r\n    if (widthLimit) {\r\n      actualWidth = Math.min(width, widthLimit)\r\n    }\r\n\r\n    const currentSize = actualWidth / baseWidth * baseSize\r\n    dispatchtFontSize(setFontSize(currentSize))\r\n    html.style.fontSize = currentSize + 'px'\r\n  }\r\n\r\n  return children\r\n}\r\n\r\nexport default withRouter(ElasticAdaptive)\r\n","import {\r\n  SET_CURRENT_FONT_SIZE,\r\n} from 'store/actions/actionTypes'\r\n\r\nexport const setFontSize = data => {\r\n  return {\r\n    type: SET_CURRENT_FONT_SIZE,\r\n    payload: data\r\n  }\r\n}\r\n","import React from 'react'\r\nimport css from './Container.module.scss'\r\nimport classnames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Container = ({\r\n  children,\r\n  className,\r\n}) => (\r\n  <div className={classnames(css.wrapper, className)}>\r\n    { children }\r\n  </div>\r\n)\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  className: PropTypes.string,\r\n}\r\n\r\nexport default Container\r\n","import React from 'react'\r\nimport css from './Header.module.scss'\r\nimport classnames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport { formatDate } from 'utils'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Header = ({ className }) => {\r\n  const setup = useSelector(state => state.data.setup)\r\n  const { type, clinic } = setup\r\n\r\n  return (\r\n    <header className={css.header}>\r\n      <div className={classnames(css.wrapper, className)}>\r\n        <h1 className={css.title}>\r\n          Рентген аудит\r\n          <span>Сервис оценки качества снимков</span>\r\n        </h1>\r\n        <p className={css.type}>\r\n          Тип анализа - <span>{ type || 'не задан' }</span>\r\n        </p>\r\n        <div className={css.clinic}>\r\n          { clinic || 'Название клиники не задано' }\r\n        </div>\r\n        <p className={css.date}>\r\n          { formatDate(new Date().getTime()).formattedDate }\r\n        </p>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst IconCheckbox = ({ className }) => (\r\n  <svg className={className} viewBox='0 0 12 9' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\r\n    <g transform='translate(-386.000000, -382.000000)'>\r\n      <g transform='translate(381.000000, 376.000000)'>\r\n        <polyline points='6 11.0478516 9.4397352 14 15.7519531 7' />\r\n      </g>\r\n    </g>\r\n  </svg>\r\n)\r\n\r\nexport default IconCheckbox\r\n","import React from 'react'\r\nimport css from './Checkbox.module.scss'\r\nimport classnames from 'classnames'\r\nimport IconCheckbox from 'assets/icons/IconCheckbox'\r\n\r\nconst Checkbox = ({\r\n  id,\r\n  className,\r\n  register,\r\n  name,\r\n  defaultValue,\r\n  isDisabled,\r\n  label,\r\n}) => {\r\n  return (\r\n    <>\r\n      <input\r\n        className={classnames(css.input, {\r\n          [css.checkboxDisabled]: isDisabled\r\n        })}\r\n        type='checkbox'\r\n        id={id}\r\n        name={name}\r\n        ref={register}\r\n        defaultChecked={defaultValue}\r\n      />\r\n      <label\r\n        className={className}\r\n        htmlFor={id}\r\n      >\r\n        <span>\r\n          { label }\r\n        </span>\r\n        <IconCheckbox className={css.iconCheck} />\r\n      </label>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Checkbox\r\n","export const ContainerTypes = {\r\n  INNER: 'inner',\r\n  OUTER: 'outer'\r\n}\r\n\r\nexport const DefaultBacklink = {\r\n  LABEL: 'На главную',\r\n}\r\n\r\nexport const HeadingTypes = {\r\n  HEADING: 'heading',\r\n  SUBHEADING: 'subheading'\r\n}\r\n\r\nexport const DEFAULT_SUBHEADING = 'Введите необходимые данные'\r\n\r\nexport const ActionButtonTypes = {\r\n  LOG: 'log',\r\n}\r\n\r\nexport const InputStyles = {\r\n  RESULT: 'result'\r\n}\r\n\r\nexport const ButtonLabels = {\r\n  SUBMIT: 'Посчитать',\r\n  RESET: 'Сбросить'\r\n}\r\n\r\nexport const ButtonTypes = {\r\n  BUTTON: 'button',\r\n  SUBMIT: 'submit',\r\n  ADD: 'add'\r\n}\r\n\r\nexport const ButtonPalettes = {\r\n  DARK: 'dark',\r\n  LIGHT: 'light',\r\n  BORDERED: 'bordered'\r\n}\r\n\r\nexport const ButtonSizes = {\r\n  STANDARD: 'standard',\r\n  LARGE: 'large'\r\n}\r\n\r\nexport const FinTools = [\r\n  {\r\n    full: 'ETF_SPY',\r\n    short: 'spy',\r\n    description: 'SPDR S&P 500 ETF Trust',\r\n  },\r\n  {\r\n    full: 'ETF_QQQ',\r\n    short: 'qqq',\r\n    description: 'PowerShares QQQ Trust, Series 1',\r\n  },\r\n  {\r\n    full: 'ETF_TLT',\r\n    short: 'tlt',\r\n    description: 'iShares 20+ Year Treasury Bond ETF',\r\n  },\r\n  {\r\n    full: 'REIT_EQR',\r\n    short: 'eqr',\r\n    description: 'Equity Residential',\r\n  },\r\n  {\r\n    full: 'ETF_VNQ',\r\n    short: 'vnq',\r\n    description: 'VANGUARD IX FUN/RL EST IX FD ETF',\r\n  },\r\n]\r\n\r\nexport const SPECIAL_SYMBOLS = [\r\n  '(',\r\n  ')',\r\n  '{',\r\n  '}',\r\n  '+',\r\n  '-',\r\n  '/',\r\n  '*',\r\n  '=',\r\n  '>',\r\n  '<',\r\n  '>=',\r\n  '<=',\r\n  ';'\r\n]\r\n","import React from 'react'\r\nimport css from './Heading.module.scss'\r\nimport classnames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport { HeadingTypes } from 'utils/const'\r\n\r\nconst Heading = ({\r\n  className,\r\n  label,\r\n  type = HeadingTypes.HEADING\r\n}) => {\r\n  const TagName = type === HeadingTypes.HEADING\r\n    ? 'h2'\r\n    : 'h3'\r\n\r\n  return (\r\n    <TagName\r\n      className={classnames(className, {\r\n        [css.heading]: type === HeadingTypes.HEADING,\r\n        [css.subheading]: type === HeadingTypes.SUBHEADING,\r\n      })}\r\n    >\r\n      { label }\r\n    </TagName>\r\n  )\r\n}\r\n\r\nHeading.propTypes = {\r\n  className: PropTypes.string,\r\n  label: PropTypes.string,\r\n  type: PropTypes.oneOf([ ...Object.values(HeadingTypes) ])\r\n}\r\n\r\nexport default Heading\r\n","import React from 'react'\r\n\r\nconst IconSpinner = ({ className }) => (\r\n  <svg className={className} viewBox=\"0 0 128 128\">\r\n    <g>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='1'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.2' transform='rotate(30 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.2' transform='rotate(60 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.2' transform='rotate(90 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.2' transform='rotate(120 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.3' transform='rotate(150 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.4' transform='rotate(180 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.5' transform='rotate(210 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.6' transform='rotate(240 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.7' transform='rotate(270 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.8' transform='rotate(300 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.9' transform='rotate(330 64 64)'/>\r\n      <animateTransform attributeName='transform' type='rotate' values='0 64 64;30 64 64;60 64 64;90 64 64;120 64 64;150 64 64;180 64 64;210 64 64;240 64 64;270 64 64;300 64 64;330 64 64' calcMode='discrete' dur='1080ms' repeatCount='indefinite' />\r\n    </g>\r\n</svg>\r\n)\r\n\r\nexport default IconSpinner\r\n","import React from 'react'\r\nimport css from './Button.module.scss'\r\nimport classnames from 'classnames'\r\nimport { ButtonPalettes, ButtonSizes, ButtonTypes } from 'utils/const'\r\nimport PropTypes from 'prop-types'\r\nimport IconSpinner from 'assets/icons/IconSpinner'\r\n\r\nconst Button = ({\r\n  className,\r\n  label,\r\n  onClick,\r\n  palette = ButtonPalettes.LIGHT,\r\n  buttonType = ButtonTypes.BUTTON,\r\n  size = ButtonSizes.STANDARD,\r\n  isLoading,\r\n  isDisabled\r\n}) => {\r\n  return (\r\n    <button\r\n      className={classnames(css.button, className, {\r\n        [css.buttonLight]: palette === ButtonPalettes.LIGHT,\r\n        [css.buttonDark]: palette === ButtonPalettes.DARK,\r\n        [css.buttonBordered]: palette === ButtonPalettes.BORDERED,\r\n        [css.buttonLarge]: size === ButtonSizes.LARGE,\r\n        [css.buttonAdd]: buttonType === ButtonTypes.ADD,\r\n        [css.buttonDisabled]: isLoading || isDisabled\r\n      })}\r\n      onClick={onClick}\r\n      type={buttonType}\r\n    >\r\n      {isLoading && <IconSpinner className={css.spinner} />}\r\n      { label }\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  palette: PropTypes.oneOf([ ...Object.values(ButtonPalettes) ]),\r\n  type: PropTypes.oneOf([ ...Object.values(ButtonTypes) ]),\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport css from './Input.module.scss'\r\nimport classnames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport { InputStyles } from 'utils/const'\r\n\r\nconst Input = ({\r\n  className,\r\n  defaultValue,\r\n  id,\r\n  isDisabled = false,\r\n  isError,\r\n  name,\r\n  onClick,\r\n  placeholder = 'Введите значение',\r\n  registerInForm,\r\n  style,\r\n  type = 'text',\r\n  ...props\r\n}) => {\r\n  const TagName = type === 'textarea' ? 'textarea' : 'input'\r\n  return (\r\n    <TagName\r\n      className={classnames(css.input, className, {\r\n        [css.inputResult]: style === InputStyles.RESULT,\r\n        [css.inputTextarea]: type === 'textarea',\r\n        [css.inputError]: isError,\r\n      })}\r\n      defaultValue={defaultValue}\r\n      id={id}\r\n      name={name}\r\n      onClick={onClick}\r\n      placeholder={placeholder}\r\n      ref={registerInForm}\r\n      type={type}\r\n      disabled={isDisabled}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n  defaultValue: PropTypes.string,\r\n  id: PropTypes.string,\r\n  isDisabled: PropTypes.bool,\r\n  placeholder: PropTypes.string,\r\n  name: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  registerInForm: PropTypes.func,\r\n  type: PropTypes.string\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport css from './Form.module.scss'\r\nimport classnames from 'classnames'\r\nimport { useForm } from 'react-hook-form'\r\nimport Checkbox from 'components/Checkbox/Checkbox'\r\nimport { HeadingTypes } from 'utils/const'\r\nimport Heading from 'components/Heading/Heading'\r\nimport Button from 'components/Button/Button'\r\nimport Input from 'components/Input/Input'\r\n\r\nconst Form = ({ defaultData, handleClickNext, handleClickReport, isReportDisabled }) => {\r\n  const { register, reset, handleSubmit } = useForm({\r\n      defaultValues: defaultData\r\n  })\r\n\r\n  const submitResults = data => {\r\n    handleClickNext(data, () => reset({...defaultData}))\r\n  }\r\n\r\n  const renderCheckboxes = () => Object.keys(defaultData).filter(item => item !== 'id').map((type, index) => (\r\n    <li className={css.item} key={index}>\r\n      <Checkbox\r\n        register={register}\r\n        className={css.check}\r\n        id={`${type}`}\r\n        name={`${type}.checked`}\r\n        defaultValue={defaultData[type].checked}\r\n        label={defaultData[type].label}\r\n      />\r\n    </li>\r\n  ))\r\n\r\n  return (\r\n    <div className={css.wrapper}>\r\n      <Heading\r\n        type={HeadingTypes.SUBHEADING}\r\n        label='Критерии анализа:'\r\n      />\r\n      <form onSubmit={handleSubmit(submitResults)}>\r\n        <div className={css.formWrapper}>\r\n          <ol className={css.list}>\r\n            { renderCheckboxes() }\r\n          </ol>\r\n          <Input\r\n            className={css.comment}\r\n            type='textarea'\r\n            registerInForm={register}\r\n            name='comment'\r\n            placeholder='Введите комментарий'\r\n          />\r\n        </div>\r\n        <div className={css.controls}>\r\n          <Button\r\n            className={classnames(css.report, css.button)}\r\n            label='Сформировать отчет'\r\n            onClick={handleClickReport}\r\n            type='button'\r\n            isDisabled={isReportDisabled}\r\n          />\r\n          <Button\r\n            className={css.button}\r\n            label='Следующий снимок'\r\n            buttonType='submit'\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst IconClose = ({ className }) => (\r\n  <svg className={className} viewBox='0 0 512.001 512.001'>\r\n    <path d='M284.286,256.002L506.143,34.144c7.811-7.811,7.811-20.475,0-28.285c-7.811-7.81-20.475-7.811-28.285,0L256,227.717\r\n\t\t\tL34.143,5.859c-7.811-7.811-20.475-7.811-28.285,0c-7.81,7.811-7.811,20.475,0,28.285l221.857,221.857L5.858,477.859\r\n\t\t\tc-7.811,7.811-7.811,20.475,0,28.285c3.905,3.905,9.024,5.857,14.143,5.857c5.119,0,10.237-1.952,14.143-5.857L256,284.287\r\n\t\t\tl221.857,221.857c3.905,3.905,9.024,5.857,14.143,5.857s10.237-1.952,14.143-5.857c7.811-7.811,7.811-20.475,0-28.285\r\n\t\t\tL284.286,256.002z'/>\r\n  </svg>\r\n)\r\n\r\nexport default IconClose\r\n","import React from 'react'\r\nimport css from './ModalSetup.module.scss'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveSetup, toggleModalVisibility } from 'store/actions'\r\nimport IconClose from 'assets/icons/IconClose'\r\nimport { useForm } from 'react-hook-form'\r\nimport Heading from 'components/Heading/Heading'\r\nimport { HeadingTypes } from 'utils/const'\r\nimport Input from 'components/Input/Input'\r\nimport Button from 'components/Button/Button'\r\n\r\nconst ModalSetup = () => {\r\n  const setup = useSelector(state => state.data.setup)\r\n  const { type, clinic, reviewer } = setup\r\n  const {register, handleSubmit} = useForm()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleCloseModal = () => {\r\n    dispatch(toggleModalVisibility(null, false))\r\n  }\r\n\r\n  const submitForm = data => {\r\n    dispatch(saveSetup(data))\r\n    dispatch(toggleModalVisibility(null, false))\r\n  }\r\n\r\n  return (\r\n    <div className={css.wrapper}>\r\n      <button\r\n        className={css.buttonClose}\r\n        onClick={handleCloseModal}\r\n        type='button'\r\n      >\r\n        Close modal\r\n        <IconClose className={css.icon} />\r\n      </button>\r\n      <Heading\r\n        type={HeadingTypes.SUBHEADING}\r\n        label='Настройки сессии'\r\n      />\r\n      <div className={css.formWrapper}>\r\n        <form onSubmit={handleSubmit(submitForm)}>\r\n          <Input\r\n            className={css.input}\r\n            registerInForm={register}\r\n            name='clinic'\r\n            defaultValue={clinic}\r\n            placeholder='Введите название клиники'\r\n          />\r\n          <Input\r\n            className={css.input}\r\n            registerInForm={register}\r\n            name='reviewer'\r\n            defaultValue={reviewer}\r\n            placeholder='Введите ФИО проверяющего'\r\n          />\r\n          <Input\r\n            className={css.input}\r\n            registerInForm={register}\r\n            name='type'\r\n            defaultValue={type}\r\n            placeholder='Введите тип анализа'\r\n          />\r\n          <Button\r\n            className={css.buttonSubmit}\r\n            label='Сохранить'\r\n            buttonType='submit'\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalSetup\r\n","import { SAVE_SETUP } from 'store/actions/actionTypes'\r\n\r\nexport const saveSetup = ({ clinic, reviewer, type }) => ({\r\n  type: SAVE_SETUP,\r\n  payload: {\r\n    clinic,\r\n    reviewer,\r\n    type\r\n  }\r\n})\r\n","import React, { useEffect, useRef } from 'react'\r\nimport css from './Modal.module.scss'\r\nimport classnames from 'classnames'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toggleModalVisibility } from 'store/actions'\r\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\r\n\r\nconst Modal = () => {\r\n  const contentRef = useRef(null)\r\n  const modal = useSelector(state => state.ui.modal)\r\n  const dispatch = useDispatch()\r\n  const { isVisible, content } = modal\r\n\r\n  const createContentRef = node => contentRef.current = node\r\n\r\n  useEffect(() => {\r\n    // TODO fix handle click outside with react-select in create variable modal\r\n    // const handleClickOutside = evt => {\r\n    //   if (isVisible && contentRef.current && !contentRef.current.contains(evt.target)) {\r\n    //     console.log(contentRef.current)\r\n    //     console.log(evt.target)\r\n    //     console.log(!contentRef.current.contains(evt.target))\r\n    //     dispatch(toggleModalVisibility(null, false))\r\n    //   }\r\n    // }\r\n\r\n    const handleEscPress = evt => {\r\n      if (evt.key === 'Escape' || evt.keyCode === 27 || evt.key === 'Esc') {\r\n        dispatch(toggleModalVisibility(null, false))\r\n      }\r\n    }\r\n\r\n    if (isVisible) {\r\n      // document.addEventListener('click', handleClickOutside)\r\n      document.addEventListener('keydown', handleEscPress)\r\n      disableBodyScroll(contentRef.current, {\r\n        reserveScrollBarGap: true\r\n      })\r\n    }\r\n\r\n    return () => {\r\n      // document.removeEventListener('click', handleClickOutside)\r\n      document.removeEventListener('keydown', handleEscPress)\r\n      clearAllBodyScrollLocks()\r\n    }\r\n  }, [isVisible, dispatch])\r\n\r\n  return (\r\n    <div\r\n      className={classnames(css.modal, { [css.modalOpened]: isVisible })}\r\n    >\r\n      {content &&\r\n        <div ref={createContentRef}>\r\n          {content}\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\n\r\nconst IconGear = ({ className }) => (\r\n  <svg className={className} viewBox='0 0 19 19'>\r\n    <g transform='translate(-990.000000, -97.000000)' fillRule='nonzero' strokeWidth='0.4'>\r\n      <g transform='translate(991.000000, 98.000000)'>\r\n        <path d='M9.03344141,17 L7.96652539,17 C7.10360937,17 6.4015293,16.2979531 6.4015293,15.4350371 L6.4015293,15.0740859 C6.03466797,14.9568789 5.67823242,14.8089258 5.33580859,14.6317207 L5.08001172,14.8875176 C4.46047461,15.5078184 3.46806641,15.489623 2.86652539,14.8872852 L2.11244922,14.1332422 C1.5098457,13.5313027 1.49251367,12.5392266 2.11264844,11.9197559 L2.36824609,11.6641582 C2.19104102,11.3217344 2.04312109,10.9653652 1.92588086,10.5984375 L1.56496289,10.5984375 C0.702080078,10.5984375 0,9.89639062 0,9.03347461 L0,7.96652539 C0,7.10360937 0.702080078,6.4015625 1.56499609,6.4015625 L1.92591406,6.4015625 C2.0431543,6.03466797 2.19107422,5.67826562 2.3682793,5.3358418 L2.11248242,5.08007812 C1.49271289,4.46097266 1.5098125,3.46879687 2.11268164,2.8665918 L2.86682422,2.11248242 C3.46975977,1.5087168 4.46193555,1.49364258 5.08027734,2.11268164 L5.3358418,2.36824609 C5.67826562,2.19107422 6.03470117,2.04312109 6.4015625,1.92588086 L6.4015625,1.56496289 C6.4015625,0.702046875 7.10360937,0 7.96655859,0 L9.03347461,0 C9.89639062,0 10.5984375,0.702046875 10.5984375,1.56496289 L10.5984375,1.92591406 C10.9652988,2.04312109 11.3217344,2.19107422 11.6641582,2.3682793 L11.9199551,2.11248242 C12.5394922,1.49218164 13.5319004,1.51037695 14.1334414,2.11271484 L14.8875176,2.86675781 C15.4901211,3.46869727 15.5074531,4.46077344 14.8873184,5.08024414 L14.6317207,5.3358418 C14.8089258,5.67826562 14.9568457,6.03463477 15.0740859,6.4015625 L15.4350039,6.4015625 C16.2979199,6.4015625 17,7.10360937 17,7.96652539 L17,9.03347461 C17,9.89639062 16.2979199,10.5984375 15.4350039,10.5984375 L15.0740859,10.5984375 C14.9568457,10.965332 14.8089258,11.3217344 14.6317207,11.6641582 L14.8875176,11.9199551 C15.5072871,12.5390605 15.4901875,13.5312363 14.8873184,14.1334414 L14.1331758,14.8875508 C13.5302402,15.4913164 12.5380645,15.5063906 11.9197227,14.8873516 L11.6641582,14.6317871 C11.3217344,14.808959 10.9652988,14.9569121 10.5984375,15.0741523 L10.5984375,15.4351035 C10.5984375,16.2979531 9.89639062,17 9.03344141,17 Z M5.50232227,13.5857227 C5.97802344,13.8670527 6.49001562,14.0795859 7.02405469,14.2174121 C7.24399219,14.2741562 7.39765625,14.4725117 7.39765625,14.6996543 L7.39765625,15.4350371 C7.39765625,15.748707 7.65288867,16.0039062 7.96655859,16.0039062 L9.03347461,16.0039062 C9.34714453,16.0039062 9.60237695,15.748707 9.60237695,15.4350371 L9.60237695,14.6996543 C9.60237695,14.4725117 9.75604102,14.2741562 9.97597852,14.2174121 C10.5100176,14.0795859 11.0220098,13.8670527 11.4977109,13.5857227 C11.6934434,13.4699766 11.9426328,13.5014531 12.1034355,13.6622559 L12.6243262,14.1831797 C12.8489121,14.4080312 13.2095645,14.4028184 13.4286387,14.1834121 L14.1832461,13.4288379 C14.4017891,13.2105605 14.4090937,12.8498418 14.1834453,12.6244922 L13.6623223,12.1033691 C13.5015527,11.9425996 13.4700762,11.693377 13.5857891,11.4976777 C13.8671191,11.0220098 14.0796191,10.5100176 14.2174453,9.97594531 C14.2742227,9.75600781 14.4725781,9.60237695 14.6996875,9.60237695 L15.4350371,9.60237695 C15.748707,9.60237695 16.0039395,9.34717773 16.0039395,9.03350781 L16.0039395,7.96655859 C16.0039395,7.65288867 15.748707,7.39768945 15.4350371,7.39768945 L14.6996875,7.39768945 C14.4725449,7.39768945 14.2742227,7.24402539 14.2174453,7.02412109 C14.0796191,6.49004883 13.8670859,5.97805664 13.5857891,5.50238867 C13.4700762,5.30668945 13.5015527,5.0574668 13.6623223,4.89669727 L14.1832461,4.37577344 C14.4084297,4.15085547 14.4025527,3.79026953 14.1834453,3.57142773 L13.4289043,2.81688672 C13.2101953,2.59787891 12.8494766,2.5914707 12.6245586,2.8166875 L12.1034687,3.33781055 C11.9426992,3.49861328 11.6934102,3.53008984 11.4977441,3.41434375 C11.022043,3.13301367 10.5100508,2.92048047 9.97601172,2.7826543 C9.75607422,2.72591016 9.60241016,2.52755469 9.60241016,2.30041211 L9.60241016,1.56496289 C9.60241016,1.25129297 9.34717773,0.99609375 9.03350781,0.99609375 L7.9665918,0.99609375 C7.65292187,0.99609375 7.39768945,1.25129297 7.39768945,1.56496289 L7.39768945,2.3003457 C7.39768945,2.52748828 7.24402539,2.72584375 7.02408789,2.78258789 C6.49004883,2.92041406 5.97805664,3.13294727 5.50235547,3.41427734 C5.30658984,3.52999023 5.05740039,3.49851367 4.89663086,3.33774414 L4.37574023,2.81682031 C4.1511543,2.59196875 3.79046875,2.59718164 3.57142773,2.81658789 L2.81682031,3.57116211 C2.59827734,3.78943945 2.59097266,4.150125 2.81662109,4.37550781 L3.33774414,4.89663086 C3.49851367,5.05740039 3.52999023,5.30662305 3.41427734,5.50232227 C3.13294727,5.97799023 2.92044727,6.48998242 2.78262109,7.02405469 C2.72584375,7.24399219 2.52748828,7.39762305 2.30037891,7.39762305 L1.56499609,7.39762305 C1.25132617,7.39765625 0.99609375,7.65285547 0.99609375,7.96652539 L0.99609375,9.03347461 C0.99609375,9.34714453 1.25132617,9.60234375 1.56499609,9.60234375 L2.3003457,9.60234375 C2.52748828,9.60234375 2.72581055,9.75600781 2.78258789,9.97591211 C2.92041406,10.5099844 3.13294727,11.0219766 3.41424414,11.4976445 C3.52995703,11.6933437 3.49848047,11.9425664 3.33771094,12.1033359 L2.81678711,12.6242598 C2.59160352,12.8491777 2.59748047,13.2097637 2.81658789,13.4286055 L3.57112891,14.1831465 C3.78983789,14.4021543 4.15055664,14.4085625 4.37547461,14.1833457 L4.89656445,13.6622227 C5.0150332,13.5437871 5.2615,13.4432812 5.50232227,13.5857227 Z' />\r\n        <path d='M8.5,12.3636364 C6.36955484,12.3636364 4.63636364,10.6304105 4.63636364,8.5 C4.63636364,6.36958952 6.36955484,4.63636364 8.5,4.63636364 C10.6304452,4.63636364 12.3636364,6.36958952 12.3636364,8.5 C12.3636364,10.6304105 10.6304452,12.3636364 8.5,12.3636364 Z M8.5,5.40909091 C6.79563324,5.40909091 5.40909091,6.79567121 5.40909091,8.5 C5.40909091,10.2043288 6.79567121,11.5909091 8.5,11.5909091 C10.2043288,11.5909091 11.5909091,10.2043288 11.5909091,8.5 C11.5909091,6.79567121 10.2043668,5.40909091 8.5,5.40909091 Z' />\r\n      </g>\r\n    </g>\r\n  </svg>\r\n)\r\n\r\nexport default IconGear\r\n","import React, { useState } from 'react'\r\nimport css from './Setup.module.scss'\r\nimport Container from 'components/Grid/Container'\r\nimport Header from 'components/Header/Header'\r\nimport Form from 'components/Form/Form'\r\nimport * as FileSaver from 'file-saver'\r\nimport * as XLSX from 'xlsx'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toggleModalVisibility } from 'store/actions'\r\nimport ModalSetup from 'components/ModalSetup/ModalSetup'\r\nimport withModal from 'hoc/withModal'\r\nimport IconGear from 'assets/icons/IconGear'\r\nimport { formatDate } from 'utils'\r\n\r\nconst defaultShotState = {\r\n  metal: {\r\n    checked: false,\r\n    label: 'Металлические предметы'\r\n  },\r\n  wrongBite: {\r\n    checked: false,\r\n    label: 'Неверно прикушен блок'\r\n  },\r\n  frankfurt: {\r\n    checked: false,\r\n    label: 'Линия Франкфурта'\r\n  },\r\n  headRotations: {\r\n    checked: false,\r\n    label: 'Поворот головы'\r\n  },\r\n  headIncline: {\r\n    checked: false,\r\n    label: 'Наклон головы'\r\n  },\r\n  roundBack: {\r\n    checked: false,\r\n    label: 'Сутулость при съемке'\r\n  },\r\n  chin: {\r\n    checked: false,\r\n    label: 'Подбородок не на опоре'\r\n  },\r\n  sharpness: {\r\n    checked: false,\r\n    label: 'Динамическая нерезкость'\r\n  },\r\n  tongue: {\r\n    checked: false,\r\n    label: 'Язык не прижат'\r\n  },\r\n  expositionErrors: {\r\n    checked: false,\r\n    label: 'Ошибки экспозиции'\r\n  },\r\n  expositionBroken: {\r\n    checked: false,\r\n    label: 'Незавершенная экспозиция'\r\n  },\r\n  ray: {\r\n    checked: false,\r\n    label: 'Клыковый луч'\r\n  },\r\n  dickey: {\r\n    checked: false,\r\n    label: 'Фартук на снимке'\r\n  },\r\n  tongueBone: {\r\n    checked: false,\r\n    label: 'Подъязычная кость в проекции НЧ'\r\n  },\r\n}\r\n\r\nconst getDefaultResult = () => {\r\n  const obj = {}\r\n\r\n  Object.values(defaultShotState).forEach(type => {\r\n    obj[type.label] = 0\r\n  })\r\n\r\n  return obj\r\n}\r\n\r\nconst Setup = () => {\r\n  const setup = useSelector(state => state.data.setup)\r\n  const { clinic, type, reviewer } = setup\r\n  const [formData, setFormData] = useState([defaultShotState])\r\n  const [activeShot, setActiveShot] = useState(0)\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClickNext = (data, callback) => {\r\n    setFormData(prevState => {\r\n      const stateCopy = [].concat(prevState)\r\n      stateCopy[activeShot] = data\r\n      stateCopy.push(defaultShotState)\r\n      return stateCopy\r\n    })\r\n    setActiveShot(prevState => prevState + 1)\r\n    callback && callback()\r\n  }\r\n\r\n  const handleClickReport = () => {\r\n    const data = formData.slice(0, formData.length -1)\r\n    console.log(data)\r\n    const finalData = getDefaultResult()\r\n    const comments = []\r\n    let correctShots = 0\r\n\r\n    data.forEach(item => {\r\n      let correct = true\r\n\r\n      Object.keys(defaultShotState).forEach((type, index) => {\r\n        if (item[type].checked) {\r\n          correct = false\r\n          console.log(defaultShotState[type].label)\r\n          finalData[defaultShotState[type].label] += 1\r\n        }\r\n\r\n        if (index === Object.keys(defaultShotState).length -1 && correct) {\r\n          correctShots += 1\r\n        }\r\n      })\r\n      if (item.comment) {\r\n        comments.push(item.comment)\r\n      }\r\n    })\r\n\r\n    const dataToBeSent = Object.entries(finalData).map(item => {\r\n      return [[item[0], ''], [item[1], ''], [`${(item[1] / data.length * 100).toFixed(1)}%`, '']]\r\n    })\r\n\r\n    const xlxData = Object.entries({\r\n      ['Дата:']: formatDate(new Date().getTime()).formattedDate,\r\n      ['Название Клиники:']: clinic,\r\n      ['Тип исследования:']: type,\r\n      ['ФИО проверяющего:']: reviewer,\r\n      ['']: '',\r\n    })\r\n\r\n    console.log(xlxData)\r\n\r\n    xlxData.push(...dataToBeSent)\r\n    xlxData.push(['', ''])\r\n    xlxData.push(['Всего снимков просмотрено:', data.length])\r\n    xlxData.push(['Снимков c замечаниями:', data.length - correctShots])\r\n    xlxData.push(['Доля снимков с замечаниями:', `${((data.length - correctShots) / data.length * 100).toFixed(1)}%`])\r\n    xlxData.push(['', ''])\r\n    xlxData.push(['Комментарии:', ''])\r\n    comments.forEach(comment => xlxData.push([comment, '']))\r\n\r\n\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n\r\n    const ws = XLSX.utils.aoa_to_sheet(xlxData, { skipHeader: true });\r\n    ws['!cols'] = [ {wpx: 250}, {wpx: 100} ]\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const fileData = new Blob([excelBuffer], {type: fileType});\r\n    FileSaver.saveAs(fileData, 'report' + fileExtension);\r\n\r\n    setActiveShot(0)\r\n    setFormData([defaultShotState])\r\n  }\r\n\r\n  const handleClickSetup = () => {\r\n    dispatch(toggleModalVisibility((\r\n      <ModalSetup />\r\n    ), true))\r\n  }\r\n\r\n  return (\r\n    <Container className={css.container}>\r\n      <Header />\r\n      <div className={css.wrapper}>\r\n        <span className={css.count}>\r\n          { `Всего снимков просмотрено: ${formData.length - 1}` }\r\n        </span>\r\n        <p className={css.name}>\r\n          { reviewer }\r\n        </p>\r\n      </div>\r\n      <button\r\n        className={css.buttonSetup}\r\n        onClick={handleClickSetup}\r\n        type='button'\r\n      >\r\n        Открыть модальное окно с настройками\r\n        <IconGear className={css.icon} />\r\n      </button>\r\n      <Form\r\n        defaultData={formData[activeShot]}\r\n        handleClickNext={handleClickNext}\r\n        handleClickReport={handleClickReport}\r\n        index={activeShot}\r\n        isReportDisabled={activeShot === 0}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default withModal(Setup)\r\n","import React, { useEffect } from 'react'\r\nimport Modal from 'components/Modal/Modal'\r\nimport { useDispatch } from 'react-redux'\r\nimport { toggleModalVisibility } from 'store/actions'\r\n\r\nconst withModal = WrappedComponent => {\r\n  return props => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n      dispatch(toggleModalVisibility(null, false))\r\n    },[dispatch, props.location.pathname])\r\n\r\n    return (\r\n      <>\r\n        <WrappedComponent {...props} />\r\n        <Modal />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withModal\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Setup from 'Pages/Setup/Setup'\r\n\r\nexport const SETUP = '/'\r\nexport const AUTH = '/'\r\n\r\n// TODO apply async import of page components to split the initial chunk\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path={SETUP} component={Setup} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React, { useEffect } from 'react'\r\nimport ElasticAdaptive from 'hoc/ElasticAdaptive'\r\nimport Routes, { AUTH } from 'Pages/Routes'\r\n// import { useSelector } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Route } from 'react-router-dom'\r\nimport Auth from 'Pages/Auth/Auth'\r\n\r\n\r\nconst App = ({ history }) => {\r\n  // const isAuthenticated = useSelector(state => state.auth.isUserAuthenticated)\r\n  const isAuthenticated = true\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      history.push({\r\n        pathname: AUTH\r\n      })\r\n    }\r\n  }, [isAuthenticated, history])\r\n\r\n  return (\r\n    <ElasticAdaptive>\r\n      {isAuthenticated\r\n        ? <Routes />\r\n        : <Route path='/' component={Auth} />\r\n      }\r\n    </ElasticAdaptive>\r\n  )\r\n}\r\n\r\nexport default withRouter(App)\r\n","import {\r\n  TOGGLE_MODAL_VISIBILITY_STATUS\r\n} from 'store/actions/actionTypes'\r\nimport { updateObject } from 'utils'\r\n\r\nconst initialState = {\r\n  modal: {\r\n    isVisible: false,\r\n    content: null\r\n  }\r\n}\r\n\r\nexport default function ui (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TOGGLE_MODAL_VISIBILITY_STATUS: return updateObject(state, { modal: {\r\n        isVisible: action.payload.status,\r\n        content: action.payload.content\r\n      }})\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { SAVE_SETUP } from 'store/actions/actionTypes'\r\nimport { updateObject } from 'utils'\r\n\r\nconst initialState = {\r\n  setup: {\r\n    clinic: '',\r\n    reviewer: '',\r\n    type: ''\r\n  }\r\n}\r\n\r\nexport default function data (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SAVE_SETUP: return updateObject(state, { setup: action.payload })\r\n    default: return state\r\n  }\r\n}\r\n","import {\r\n  SET_USER_TO_AUTHENTICATED\r\n} from 'store/actions/actionTypes'\r\nimport { updateObject } from 'utils'\r\n\r\nconst initialState = {\r\n  isUserAuthenticated: false\r\n}\r\n\r\nexport default function auth (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_USER_TO_AUTHENTICATED: return updateObject(state, { isUserAuthenticated: true })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'normalize.css'\r\nimport 'styles/common.scss'\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport elasticAdaptive from 'store/reducers/elasticAdaptive'\r\nimport App from 'App'\r\nimport thunk from 'redux-thunk'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport ui from 'store/reducers/ui'\r\nimport data from 'store/reducers/data'\r\nimport auth from 'store/reducers/auth'\r\n\r\nconst rootReducer = combineReducers({\r\n  elastic: elasticAdaptive,\r\n  ui: ui,\r\n  data: data,\r\n  auth: auth,\r\n})\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(thunk))\r\n\r\nconst Content = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(Content, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}