{"version":3,"sources":["components/ErrorMessage/ErrorMessage.module.scss","components/Grid/Container.module.scss","serviceWorker.js","store/reducers/elasticAdaptive.js","utils/const.js","components/Input/Input.js","assets/icons/IconSpinner.js","components/Button/Button.js","axiosHugs.js","assets/icons/IconCalendar.js","components/Datepicker/Datepicker.js","components/ErrorMessage/ErrorMessage.js","utils/index.js","hoc/ElasticAdaptive.js","store/actions/elasticAdaptive.js","store/actions/actionTypes.js","components/Grid/Container.js","components/Heading/Heading.js","Pages/Auth/Auth.js","Pages/Setup/Setup.js","Pages/Routes.js","App.js","store/reducers/ui.js","store/reducers/data.js","store/reducers/auth.js","index.js","components/Datepicker/Datepicker.module.scss","components/Button/Button.module.scss","Pages/Auth/Auth.module.scss","components/InputFormula/InputFormula.module.scss","components/ContextMenu/ContextMenu.module.scss","components/CreateVariable/CreateVariable.module.scss","components/SelectStandard/SelectStandard.module.scss","components/Input/Input.module.scss","components/Label/Label.module.scss","components/Heading/Heading.module.scss"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","config","baseSize","baseWidth","process","widthLimit","curFontSize","HeadingTypes","InputStyles","ButtonTypes","ButtonPalettes","ButtonSizes","Input","className","defaultValue","id","isDisabled","isError","name","onClick","placeholder","registerInForm","style","type","props","TagName","classnames","css","input","inputResult","inputTextarea","inputError","ref","disabled","IconSpinner","viewBox","d","fillOpacity","transform","attributeName","values","calcMode","dur","repeatCount","Button","label","palette","buttonType","size","isLoading","button","buttonLight","buttonDark","buttonBordered","buttonLarge","buttonAdd","buttonDisabled","spinner","axios","create","baseURL","REACT_APP_API_URL","IconCalendar","version","xmlns","fillRule","React","memo","register","setValue","isFutureDisabled","localization","locale","weekdaysShort","months","useState","from","indicated","formatDate","Date","getTime","formattedDate","calendarData","updateCalendarData","isCalendarOpen","setCalendarOpen","calendarWrapperRef","useRef","useEffect","handleCloseCalendar","handleFilterReset","handleClickOutside","evt","current","contains","target","document","addEventListener","removeEventListener","modifiers","start","selectedDays","wrapper","iconCalendar","content","datepicker","numberOfMonths","disabledDays","after","onDayClick","day","state","firstDayOfWeek","controls","btnControl","btnControlApply","btnControlReset","ErrorMessage","debounce","func","lastTimeout","context","this","args","arguments","clearTimeout","setTimeout","apply","addLeadingZero","number","timestamp","date","getDate","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","formattedTime","updateObject","object","fields","Object","assign","withRouter","children","useSelector","elastic","dispatchtFontSize","useDispatch","changeSize","width","documentElement","clientWidth","body","innerWidth","html","actualWidth","Math","min","currentSize","payload","fontSize","Container","Heading","heading","subheading","Auth","history","useForm","handleSubmit","errors","isRequiredError","filter","item","length","isIncorrect","console","log","container","onSubmit","push","pathname","SETUP","required","validate","value","error","Setup","Routes","exact","path","component","isAuthenticated","auth","isUserAuthenticated","modal","isVisible","rootReducer","combineReducers","action","ui","status","data","store","createStore","applyMiddleware","thunk","Content","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c287fe71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ErrorMessage_label__3Sm7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Container_wrapper__3hiM8\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  SET_CURRENT_FONT_SIZE,\r\n} from 'store/actions/actionTypes'\r\n\r\nconst initialState = {\r\n  config: {\r\n    baseSize: 10,\r\n    baseWidth: process.env.REACT_APP_BASE_WIDTH_DESKTOP,\r\n    widthLimit: process.env.REACT_APP_WIDTH_LIMIT_DESKTOP\r\n  },\r\n  curFontSize: 10\r\n}\r\n\r\nexport default function ElasticAdaptive (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_FONT_SIZE:\r\n      return {\r\n        ...state,\r\n        curFontSize: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const ContainerTypes = {\r\n  INNER: 'inner',\r\n  OUTER: 'outer'\r\n}\r\n\r\nexport const DefaultBacklink = {\r\n  LABEL: 'На главную',\r\n}\r\n\r\nexport const HeadingTypes = {\r\n  HEADING: 'heading',\r\n  SUBHEADING: 'subheading'\r\n}\r\n\r\nexport const DEFAULT_SUBHEADING = 'Введите необходимые данные'\r\n\r\nexport const ActionButtonTypes = {\r\n  LOG: 'log',\r\n}\r\n\r\nexport const InputStyles = {\r\n  RESULT: 'result'\r\n}\r\n\r\nexport const ButtonLabels = {\r\n  SUBMIT: 'Посчитать',\r\n  RESET: 'Сбросить'\r\n}\r\n\r\nexport const ButtonTypes = {\r\n  BUTTON: 'button',\r\n  SUBMIT: 'submit',\r\n  ADD: 'add'\r\n}\r\n\r\nexport const ButtonPalettes = {\r\n  DARK: 'dark',\r\n  LIGHT: 'light',\r\n  BORDERED: 'bordered'\r\n}\r\n\r\nexport const ButtonSizes = {\r\n  STANDARD: 'standard',\r\n  LARGE: 'large'\r\n}\r\n\r\nexport const FinTools = [\r\n  {\r\n    full: 'ETF_SPY',\r\n    short: 'spy',\r\n    description: 'SPDR S&P 500 ETF Trust',\r\n  },\r\n  {\r\n    full: 'ETF_QQQ',\r\n    short: 'qqq',\r\n    description: 'PowerShares QQQ Trust, Series 1',\r\n  },\r\n  {\r\n    full: 'ETF_TLT',\r\n    short: 'tlt',\r\n    description: 'iShares 20+ Year Treasury Bond ETF',\r\n  },\r\n  {\r\n    full: 'REIT_EQR',\r\n    short: 'eqr',\r\n    description: 'Equity Residential',\r\n  },\r\n  {\r\n    full: 'ETF_VNQ',\r\n    short: 'vnq',\r\n    description: 'VANGUARD IX FUN/RL EST IX FD ETF',\r\n  },\r\n]\r\n\r\nexport const SPECIAL_SYMBOLS = [\r\n  '(',\r\n  ')',\r\n  '{',\r\n  '}',\r\n  '+',\r\n  '-',\r\n  '/',\r\n  '*',\r\n  '=',\r\n  '>',\r\n  '<',\r\n  '>=',\r\n  '<=',\r\n  ';'\r\n]\r\n","import React from 'react'\r\nimport css from './Input.module.scss'\r\nimport classnames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport { InputStyles } from 'utils/const'\r\n\r\nconst Input = ({\r\n  className,\r\n  defaultValue,\r\n  id,\r\n  isDisabled = false,\r\n  isError,\r\n  name,\r\n  onClick,\r\n  placeholder = 'Введите значение',\r\n  registerInForm,\r\n  style,\r\n  type = 'text',\r\n  ...props\r\n}) => {\r\n  const TagName = type === 'textarea' ? 'textarea' : 'input'\r\n  return (\r\n    <TagName\r\n      className={classnames(css.input, className, {\r\n        [css.inputResult]: style === InputStyles.RESULT,\r\n        [css.inputTextarea]: type === 'textarea',\r\n        [css.inputError]: isError,\r\n      })}\r\n      defaultValue={defaultValue}\r\n      id={id}\r\n      name={name}\r\n      onClick={onClick}\r\n      placeholder={placeholder}\r\n      ref={registerInForm}\r\n      type={type}\r\n      disabled={isDisabled}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n  defaultValue: PropTypes.string,\r\n  id: PropTypes.string,\r\n  isDisabled: PropTypes.bool,\r\n  placeholder: PropTypes.string,\r\n  name: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  registerInForm: PropTypes.func,\r\n  type: PropTypes.string\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\n\r\nconst IconSpinner = ({ className }) => (\r\n  <svg className={className} viewBox=\"0 0 128 128\">\r\n    <g>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='1'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.2' transform='rotate(30 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.2' transform='rotate(60 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.2' transform='rotate(90 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.2' transform='rotate(120 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.3' transform='rotate(150 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.4' transform='rotate(180 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.5' transform='rotate(210 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.6' transform='rotate(240 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.7' transform='rotate(270 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.8' transform='rotate(300 64 64)'/>\r\n      <path d='M59.6 0h8v40h-8V0z' fillOpacity='0.9' transform='rotate(330 64 64)'/>\r\n      <animateTransform attributeName='transform' type='rotate' values='0 64 64;30 64 64;60 64 64;90 64 64;120 64 64;150 64 64;180 64 64;210 64 64;240 64 64;270 64 64;300 64 64;330 64 64' calcMode='discrete' dur='1080ms' repeatCount='indefinite' />\r\n    </g>\r\n</svg>\r\n)\r\n\r\nexport default IconSpinner\r\n","import React from 'react'\r\nimport css from './Button.module.scss'\r\nimport classnames from 'classnames'\r\nimport { ButtonPalettes, ButtonSizes, ButtonTypes } from 'utils/const'\r\nimport PropTypes from 'prop-types'\r\nimport IconSpinner from 'assets/icons/IconSpinner'\r\n\r\nconst Button = ({\r\n  className,\r\n  label,\r\n  onClick,\r\n  palette = ButtonPalettes.LIGHT,\r\n  buttonType = ButtonTypes.BUTTON,\r\n  size = ButtonSizes.STANDARD,\r\n  isLoading,\r\n  isDisabled\r\n}) => {\r\n  return (\r\n    <button\r\n      className={classnames(css.button, className, {\r\n        [css.buttonLight]: palette === ButtonPalettes.LIGHT,\r\n        [css.buttonDark]: palette === ButtonPalettes.DARK,\r\n        [css.buttonBordered]: palette === ButtonPalettes.BORDERED,\r\n        [css.buttonLarge]: size === ButtonSizes.LARGE,\r\n        [css.buttonAdd]: buttonType === ButtonTypes.ADD,\r\n        [css.buttonDisabled]: isLoading || isDisabled\r\n      })}\r\n      onClick={onClick}\r\n      type={buttonType}\r\n    >\r\n      {isLoading && <IconSpinner className={css.spinner} />}\r\n      { label }\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  palette: PropTypes.oneOf([ ...Object.values(ButtonPalettes) ]),\r\n  type: PropTypes.oneOf([ ...Object.values(ButtonTypes) ]),\r\n}\r\n\r\nexport default Button\r\n","import axios from 'axios'\r\n\r\nconst axiosHugs = axios.create({\r\n  baseURL: `${process.env.REACT_APP_API_URL}`,\r\n})\r\n\r\nexport default axiosHugs\r\n","import React from 'react'\r\n\r\nconst IconCalendar = ({ className }) => (\r\n  <svg className={className} viewBox=\"0 0 15 15\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" fillRule=\"nonzero\">\r\n    <path d=\"M12.5,1.75 L11.875,1.75 L11.875,1.125 C11.875,0.779822031 11.595178,0.5 11.25,0.5 C10.904822,0.5 10.625,0.779822031 10.625,1.125 L10.625,1.75 L8.125,1.75 L8.125,1.125 C8.125,0.779822031 7.84517797,0.5 7.5,0.5 C7.15482203,0.5 6.875,0.779822031 6.875,1.125 L6.875,1.75 L4.375,1.75 L4.375,1.125 C4.375,0.779822031 4.09517797,0.5 3.75,0.5 C3.40482203,0.5 3.125,0.779822031 3.125,1.125 L3.125,1.75 L2.5,1.75 C1.11928813,1.75 0,2.86928813 0,4.25 L0,13 C0,14.3807119 1.11928813,15.5 2.5,15.5 L12.5,15.5 C13.8807119,15.5 15,14.3807119 15,13 L15,4.25 C15,2.86928813 13.8807119,1.75 12.5,1.75 Z M2.5,3 L3.125,3 L3.125,3.625 C3.125,3.97017797 3.40482203,4.25 3.75,4.25 C4.09517797,4.25 4.375,3.97017797 4.375,3.625 L4.375,3 L6.875,3 L6.875,3.625 C6.875,3.97017797 7.15482203,4.25 7.5,4.25 C7.84517797,4.25 8.125,3.97017797 8.125,3.625 L8.125,3 L10.625,3 L10.625,3.625 C10.625,3.97017797 10.904822,4.25 11.25,4.25 C11.595178,4.25 11.875,3.97017797 11.875,3.625 L11.875,3 L12.5,3 C13.1903559,3 13.75,3.55964406 13.75,4.25 L13.75,5.5 L1.25,5.5 L1.25,4.25 C1.25,3.55964406 1.80964406,3 2.5,3 Z\" />\r\n    <path d=\"M12.5,14.25 L2.5,14.25 C1.80964406,14.25 1.25,13.6903559 1.25,13 L1.25,6.75 L13.75,6.75 L13.75,13 C13.75,13.6903559 13.1903559,14.25 12.5,14.25 Z\"  />\r\n  </svg>\r\n)\r\n\r\nexport default IconCalendar\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport css from './Datepicker.module.scss'\r\nimport classnames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\n// datepicker stuff\r\nimport DayPicker from 'react-day-picker'\r\nimport 'react-day-picker/lib/style.css'\r\nimport { formatDate } from 'utils'\r\nimport Input from 'components/Input/Input'\r\nimport IconCalendar from 'assets/icons/IconCalendar'\r\n\r\nconst Datepicker = ({\r\n  className,\r\n  id,\r\n  name,\r\n  register,\r\n  setValue,\r\n  isFutureDisabled\r\n}) => {\r\n  const localization = {\r\n    locale: 'ru',\r\n    weekdaysShort: [\r\n      'ВСК',\r\n      'ПНД',\r\n      'ВТР',\r\n      'СРД',\r\n      'ЧТВ',\r\n      'ПТН',\r\n      'СБТ'\r\n    ],\r\n    months: [\r\n      'Январь',\r\n      'Февраль',\r\n      'Март',\r\n      'Апрель',\r\n      'Май',\r\n      'Июнь',\r\n      'Июль',\r\n      'Август',\r\n      'Сентябрь',\r\n      'Октябрь',\r\n      'Ноябрь',\r\n      'Декабрь',\r\n    ],\r\n  }\r\n\r\n  const [calendarData, updateCalendarData] = useState({\r\n    from: null,\r\n    indicated: formatDate(new Date().getTime()).formattedDate\r\n  })\r\n  const [isCalendarOpen, setCalendarOpen] = useState(false)\r\n  const calendarWrapperRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    setValue(name, calendarData.indicated)\r\n  }, [calendarData.indicated, name, setValue])\r\n\r\n  const handleDayClick = day => {\r\n    updateCalendarData(state => ({\r\n      ...state,\r\n      from: day,\r\n    }))\r\n  }\r\n\r\n  const handleResetClick = () => {\r\n    updateCalendarData({\r\n      from: null,\r\n      indicated: formatDate(new Date().getTime()).formattedDate\r\n    })\r\n  }\r\n\r\n  const handleCloseCalendar = () => {\r\n    setCalendarOpen(false)\r\n  }\r\n\r\n  const handleFilterReset = () => {\r\n    handleResetClick()\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = evt => {\r\n      if (!calendarWrapperRef.current.contains(evt.target)) {\r\n        handleCloseCalendar()\r\n      }\r\n    }\r\n\r\n    document.addEventListener('click', handleClickOutside)\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside)\r\n    }\r\n  }, [])\r\n\r\n  const { from } = calendarData\r\n  const modifiers = { start: from }\r\n  const selectedDays = [ from ]\r\n\r\n  return (\r\n    <div className={classnames(css.wrapper, className)} ref={calendarWrapperRef}>\r\n      <div className={css.input} onClick={() => {\r\n        setCalendarOpen(!isCalendarOpen)\r\n      }}>\r\n        <Input\r\n          id={id}\r\n          name={name}\r\n          registerInForm={register}\r\n          placeholder='Выберите дату'\r\n          defaultValue={calendarData.indicated}\r\n          isDisabled={true}\r\n        />\r\n        <IconCalendar className={css.iconCalendar} />\r\n      </div>\r\n      {isCalendarOpen &&\r\n        <div className={css.content}>\r\n          <DayPicker\r\n            className={css.datepicker}\r\n            numberOfMonths={1}\r\n            selectedDays={selectedDays}\r\n            modifiers={modifiers}\r\n            disabledDays={{ after: isFutureDisabled ? new Date() : null }}\r\n            onDayClick={handleDayClick}\r\n            locale={localization.locale}\r\n            weekdaysShort={localization.weekdaysShort}\r\n            months={localization.months}\r\n            firstDayOfWeek={1}\r\n          />\r\n          <div className={css.controls}>\r\n            <button\r\n              className={classnames(css.btnControl, css.btnControlApply)}\r\n              onClick={() => {\r\n                updateCalendarData(state => {\r\n                  return {\r\n                    ...state,\r\n                    indicated: formatDate(state.from).formattedDate\r\n                  }\r\n                })\r\n                handleCloseCalendar()\r\n              }}\r\n            >\r\n              Применить\r\n            </button>\r\n            <button\r\n              className={classnames(css.btnControl, css.btnControlReset)}\r\n              onClick={() => {\r\n                handleFilterReset()\r\n                handleCloseCalendar()\r\n              }}\r\n            >\r\n              Отменить\r\n            </button>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nDatepicker.propTypes = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default React.memo(Datepicker)\r\n","import React from 'react'\r\nimport css from './ErrorMessage.module.scss'\r\nimport classnames from 'classnames'\r\n\r\nconst ErrorMessage = ({\r\n  className,\r\n  label,\r\n}) => {\r\n  return (\r\n    <p className={classnames(css.label, className)}>\r\n      { label }\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import { SyntaxTypes } from 'components/InputFormula/InputFormula'\r\nimport React from 'react'\r\n\r\nexport const debounce = func => {\r\n  let lastTimeout = null\r\n\r\n  return function () {\r\n    const context = this\r\n    const args = arguments\r\n\r\n    if (lastTimeout) {\r\n      clearTimeout(lastTimeout)\r\n    }\r\n\r\n    lastTimeout = setTimeout(function () {\r\n      func.apply(context, args)\r\n    }, 250)\r\n  }\r\n}\r\n\r\nexport const getRandomArrayElement = array => {\r\n  return array[Math.floor(Math.random() * array.length)]\r\n}\r\n\r\nexport const getRandomNumberInRange = (min, max) => min + Math.floor(Math.random() * (max - min + 1))\r\n\r\nexport const getRandomBoolean = () => Math.random() > 0.5;\r\n\r\nexport const shuffleArray = array => array.sort(() => Math.random() > 0.5)\r\n\r\nexport const addLeadingZero = number => number < 10 ? `0${number}` : `${number}`\r\n\r\nexport const getRandomDate = () => {\r\n  const actualYear = (new Date()).getFullYear()\r\n  const yearDiff = actualYear - 1970\r\n\r\n  return new Date(1000 * 60 * 60 * 24 * getRandomNumberInRange(1, 365) * getRandomNumberInRange(1, yearDiff))\r\n}\r\n\r\nexport const formatDate = timestamp => {\r\n  const date = new Date(timestamp)\r\n\r\n  const day = addLeadingZero(date.getDate())\r\n  const month = addLeadingZero(date.getMonth() + 1)\r\n  const year = date.getFullYear()\r\n\r\n  const hours = addLeadingZero(date.getHours())\r\n  const minutes = addLeadingZero(date.getMinutes())\r\n\r\n  return {\r\n    formattedDate: `${day}.${month}.${year}`,\r\n    formattedTime: `${hours}:${minutes}`\r\n  }\r\n}\r\n\r\n/**\r\n * Get a word declination according to counter value\r\n * @param {number} counter - a number, which requires a correct declination\r\n * @param {[string]} wordOptions - an array of possible word declinations\r\n * @returns {string} wordOptions[].calculatedIndex - the correct word from wordOptions array\r\n */\r\nexport const getWordDeclination = (counter, wordOptions = ['ордер', 'ордера', 'ордеров']) => {\r\n  let result = ''\r\n  const counterString = String(counter).split('')\r\n  const lastDigit = counterString[counterString.length - 1]\r\n\r\n  switch (lastDigit) {\r\n    case '1':\r\n      result = wordOptions[0]\r\n      break\r\n    case '2':\r\n    case '3':\r\n    case '4':\r\n      result = wordOptions[1]\r\n      break\r\n    default:\r\n      result = wordOptions[2]\r\n  }\r\n\r\n  return result\r\n}\r\n\r\nexport const updateObject = (object, ...fields) => {\r\n  return Object.assign({}, object, ...fields);\r\n}\r\n\r\nexport const addFieldToAllObjects = (arrayOfObjects, requiredField) => {\r\n  return arrayOfObjects.map(object => updateObject(object, requiredField))\r\n}\r\n\r\nexport const checkIfObjectEmpty = obj => {\r\n  let isEmpty = true\r\n\r\n  for (let prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      isEmpty = false\r\n      break\r\n    }\r\n  }\r\n\r\n  return isEmpty\r\n}\r\n\r\nexport const addLayoutToFormula = formula => {\r\n  let updatedFormula = formula || ''\r\n\r\n  SyntaxTypes.GENERAL.forEach(item => {\r\n    updatedFormula = updatedFormula.split(item).join(`\"start span class \"general\"end\"${item}\"start span end\"`)\r\n  })\r\n\r\n  updatedFormula = updatedFormula.replace(/\"start span end\"/g, `</span>`)\r\n  updatedFormula = updatedFormula.replace(/\"start span class \"general\"end\"/g, `<span class=\"general\">`)\r\n\r\n  SyntaxTypes.OPERATORS.forEach(operator => {\r\n    updatedFormula = updatedFormula.split(operator).join(`<span class=\"operators\">${operator}</span>`)\r\n  })\r\n\r\n  return updatedFormula\r\n}\r\n\r\nexport const renderRow = row => Object.values(row).map((item, key) => (\r\n  <td key={`Fin Tool cell ${item}-${key}`} dangerouslySetInnerHTML={{ __html: item }} />\r\n))\r\n","import { useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { setFontSize } from 'store/actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { debounce } from 'utils'\r\n\r\n// hoc for html font size adjustment in correspondence with user's screen width\r\nconst ElasticAdaptive = ({ children }) => {\r\n  const state = useSelector(state => state.elastic.config)\r\n  const dispatchtFontSize = useDispatch()\r\n\r\n  useEffect(() => {\r\n    changeSize()\r\n    window.addEventListener('resize', debounce(changeSize))\r\n    window.addEventListener('orientationchange', debounce(changeSize))\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', debounce(changeSize))\r\n      window.removeEventListener('orientationchange', debounce(changeSize))\r\n    }\r\n  })\r\n\r\n  const changeSize = () => {\r\n    let width = document.documentElement.clientWidth || document.body.clientWidth || window.innerWidth\r\n    const html = document.documentElement\r\n    const {widthLimit, baseWidth} = state\r\n    let {baseSize} = state\r\n    let actualWidth = width\r\n\r\n    if (widthLimit) {\r\n      actualWidth = Math.min(width, widthLimit)\r\n    }\r\n\r\n    const currentSize = actualWidth / baseWidth * baseSize\r\n    dispatchtFontSize(setFontSize(currentSize))\r\n    html.style.fontSize = currentSize + 'px'\r\n  }\r\n\r\n  return children\r\n}\r\n\r\nexport default withRouter(ElasticAdaptive)\r\n","import {\r\n  SET_CURRENT_FONT_SIZE,\r\n} from 'store/actions/actionTypes'\r\n\r\nexport const setFontSize = data => {\r\n  return {\r\n    type: SET_CURRENT_FONT_SIZE,\r\n    payload: data\r\n  }\r\n}\r\n","export const SET_CURRENT_FONT_SIZE = 'SET_CURRENT_FONT_SIZE'\r\n\r\n// ui\r\nexport const TOGGLE_MODAL_VISIBILITY_STATUS = 'TOGGLE_MODAL_VISIBILITY_STATUS'\r\n\r\n// auth\r\nexport const SET_USER_TO_AUTHENTICATED = 'SET_USER_TO_AUTHENTICATED'\r\n\r\n// data\r\n","import React from 'react'\r\nimport css from './Container.module.scss'\r\nimport classnames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Container = ({\r\n  children,\r\n  className,\r\n}) => (\r\n  <div className={classnames(css.wrapper, className)}>\r\n    { children }\r\n  </div>\r\n)\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  className: PropTypes.string,\r\n}\r\n\r\nexport default Container\r\n","import React from 'react'\r\nimport css from './Heading.module.scss'\r\nimport classnames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport { HeadingTypes } from 'utils/const'\r\n\r\nconst Heading = ({\r\n  className,\r\n  label,\r\n  type = HeadingTypes.HEADING\r\n}) => {\r\n  const TagName = type === HeadingTypes.HEADING\r\n    ? 'h2'\r\n    : 'h3'\r\n\r\n  return (\r\n    <TagName\r\n      className={classnames(className, {\r\n        [css.heading]: type === HeadingTypes.HEADING,\r\n        [css.subheading]: type === HeadingTypes.SUBHEADING,\r\n      })}\r\n    >\r\n      { label }\r\n    </TagName>\r\n  )\r\n}\r\n\r\nHeading.propTypes = {\r\n  className: PropTypes.string,\r\n  label: PropTypes.string,\r\n  type: PropTypes.oneOf([ ...Object.values(HeadingTypes) ])\r\n}\r\n\r\nexport default Heading\r\n","import React from 'react'\r\nimport css from './Auth.module.scss'\r\nimport Container from 'components/Grid/Container'\r\nimport { useForm } from 'react-hook-form'\r\nimport Input from 'components/Input/Input'\r\nimport Heading from 'components/Heading/Heading'\r\nimport Button from 'components/Button/Button'\r\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage'\r\nimport { SETUP } from 'Pages/Routes'\r\n\r\nconst Auth = ({ history }) => {\r\n  const { register, handleSubmit, errors } = useForm()\r\n  const isRequiredError = Object.values(errors).filter(item => item.type === 'required').length > 0\r\n  const isIncorrect = Object.values(errors).filter(item => item.type === 'isIncorrect').length > 0\r\n\r\n  const submitForm = () => {\r\n    history.push({\r\n      pathname: SETUP\r\n    })\r\n  }\r\n\r\n  console.log(errors)\r\n\r\n  return (\r\n    <Container className={css.container}>\r\n      <div className={css.wrapper}>\r\n        <Heading\r\n          label='Picture analyzer'\r\n          className={css.heading}\r\n        />\r\n        <form onSubmit={handleSubmit(submitForm)}>\r\n          <Input\r\n            className={css.input}\r\n            registerInForm={register({\r\n              required: true,\r\n              validate: {\r\n                isIncorrect: value => value === process.env.REACT_APP_LOGIN\r\n              }\r\n            })}\r\n            name='analyzer-auth-login'\r\n            placeholder='Введите логин'\r\n          />\r\n          <Input\r\n            className={css.input}\r\n            registerInForm={register({\r\n              required: true,\r\n              validate: {\r\n                isIncorrect: value => value === process.env.REACT_APP_PASSWORD\r\n              }\r\n            })}\r\n            name='analyzer-auth-password'\r\n            placeholder='Введите пароль'\r\n            type='password'\r\n          />\r\n          <Button\r\n            className={css.button}\r\n            label='Authorize'\r\n            buttonType='submit'\r\n          />\r\n          {isRequiredError &&\r\n            <ErrorMessage\r\n              className={css.error}\r\n              label='Пожалуйста, заполните все поля'\r\n            />\r\n          }\r\n          {isIncorrect &&\r\n            <ErrorMessage\r\n              className={css.error}\r\n              label='Пожалуйста, проверьте правильность введенных данных авторизации'\r\n            />\r\n          }\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n","import React from 'react'\r\nimport css from './Setup.module.scss'\r\nimport Container from 'components/Grid/Container'\r\n\r\nconst Setup = () => {\r\n  return (\r\n    <Container>\r\n      Setup page will be here\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Setup\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Auth from 'Pages/Auth/Auth'\r\nimport Setup from 'Pages/Setup/Setup'\r\n\r\nexport const SETUP = '/setup'\r\nexport const AUTH = '/auth'\r\n\r\n// TODO apply async import of page components to split the initial chunk\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={AUTH} component={Auth} />\r\n      <Route exact path={SETUP} component={Setup} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React, { useEffect } from 'react'\r\nimport ElasticAdaptive from 'hoc/ElasticAdaptive'\r\nimport Routes, { AUTH } from 'Pages/Routes'\r\nimport { useSelector } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nconst App = ({ history }) => {\r\n  const isAuthenticated = useSelector(state => state.auth.isUserAuthenticated)\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      history.push({\r\n        pathname: AUTH\r\n      })\r\n    }\r\n  }, [isAuthenticated, history])\r\n\r\n  return (\r\n    <ElasticAdaptive>\r\n      <main>\r\n        <Routes />\r\n      </main>\r\n    </ElasticAdaptive>\r\n  )\r\n}\r\n\r\nexport default withRouter(App)\r\n","import {\r\n  TOGGLE_MODAL_VISIBILITY_STATUS\r\n} from 'store/actions/actionTypes'\r\nimport { updateObject } from 'utils'\r\n\r\nconst initialState = {\r\n  modal: {\r\n    isVisible: false,\r\n    content: null\r\n  }\r\n}\r\n\r\nexport default function ui (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TOGGLE_MODAL_VISIBILITY_STATUS: return updateObject(state, { modal: {\r\n        isVisible: action.payload.status,\r\n        content: action.payload.content\r\n      }})\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","const initialState = {\r\n}\r\n\r\nexport default function data (state = initialState, action) {\r\n  switch (action.type) {\r\n    default: return state\r\n  }\r\n}\r\n","import {\r\n  SET_USER_TO_AUTHENTICATED\r\n} from 'store/actions/actionTypes'\r\nimport { updateObject } from 'utils'\r\n\r\nconst initialState = {\r\n  isUserAuthenticated: false\r\n}\r\n\r\nexport default function auth (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_USER_TO_AUTHENTICATED: return updateObject(state, { isUserAuthenticated: true })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'normalize.css'\r\nimport 'styles/common.scss'\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport elasticAdaptive from 'store/reducers/elasticAdaptive'\r\nimport App from 'App'\r\nimport thunk from 'redux-thunk'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport ui from 'store/reducers/ui'\r\nimport data from 'store/reducers/data'\r\nimport auth from 'store/reducers/auth'\r\n\r\nconst rootReducer = combineReducers({\r\n  elastic: elasticAdaptive,\r\n  ui: ui,\r\n  data: data,\r\n  auth: auth,\r\n})\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(thunk))\r\n\r\nconst Content = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(Content, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Datepicker_wrapper__3dL9F\",\"iconCalendar\":\"Datepicker_iconCalendar__1Nf8N\",\"datepicker\":\"Datepicker_datepicker__3mVHk\",\"input\":\"Datepicker_input__1t1zy\",\"content\":\"Datepicker_content__1kfI5\",\"controls\":\"Datepicker_controls__2Zv2H\",\"btnControl\":\"Datepicker_btnControl__2pUdG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3nxx8\",\"buttonLight\":\"Button_buttonLight__2uSbz\",\"buttonDark\":\"Button_buttonDark__Gjr1R\",\"buttonBordered\":\"Button_buttonBordered__fj2rH\",\"spinner\":\"Button_spinner__2AOZZ\",\"buttonLarge\":\"Button_buttonLarge__1XMgE\",\"buttonAdd\":\"Button_buttonAdd__1WYKE\",\"buttonDisabled\":\"Button_buttonDisabled__3gSkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Auth_container__11OP3\",\"wrapper\":\"Auth_wrapper__2HxyD\",\"heading\":\"Auth_heading__2loVM\",\"input\":\"Auth_input__27nEt\",\"button\":\"Auth_button__5OR4v\",\"error\":\"Auth_error__1tNPL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"InputFormula_wrapper__29pXn\",\"button\":\"InputFormula_button__3m2IN\",\"icon\":\"InputFormula_icon__3-oxW\",\"buttonOpened\":\"InputFormula_buttonOpened__1yWUt\",\"input\":\"InputFormula_input__wo_hr\",\"list\":\"InputFormula_list__m8JdH\",\"item\":\"InputFormula_item__2om6R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContextMenu_list__1siat\",\"listOpened\":\"ContextMenu_listOpened__17-OY\",\"button\":\"ContextMenu_button__2JqYX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CreateVariable_wrapper__37c8Q\",\"title\":\"CreateVariable_title__1VDHE\",\"fieldset\":\"CreateVariable_fieldset__2ZGj-\",\"fieldsetValue\":\"CreateVariable_fieldsetValue__9OwTh\",\"error\":\"CreateVariable_error__1MYW-\",\"fieldsetInner\":\"CreateVariable_fieldsetInner__1pTL5\",\"twoColumns\":\"CreateVariable_twoColumns__3eeep\",\"label\":\"CreateVariable_label__1mmiA\",\"controls\":\"CreateVariable_controls__2tiz0\",\"button\":\"CreateVariable_button__3p87R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SelectStandard_label__3gN96\",\"select\":\"SelectStandard_select__2ag8R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__36TkE\",\"inputError\":\"Input_inputError__1U5Wr\",\"inputResult\":\"Input_inputResult__1t6ul\",\"inputTextarea\":\"Input_inputTextarea__3r3ky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Label_label__3H68k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__2zOZ6\",\"subheading\":\"Heading_subheading__1Z7rp\"};"],"sourceRoot":""}